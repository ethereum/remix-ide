# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-22, Remix;
# This file is distributed under the same license as the Remix - Ethereum IDE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Remix - Ethereum IDE 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-19 15:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../unittesting.md:1
msgid "Unit Testing Plugin"
msgstr ""

#: ../../unittesting.md:4
msgid "Click the  (double check) icon from icon bar to move to the Solidity Unit Testing plugin."
msgstr ""

#: ../../unittesting.md:8
msgid "If you haven't used this plugin before and are not seeing double check icon, you have to activate it from Remix plugin manager."
msgstr ""

#: ../../unittesting.md:10
msgid "Go to the plugin manager by clicking the  (plug) icon and activate Solidity Unit Testing plugin."
msgstr ""

#: ../../unittesting.md:14
msgid "Now double check icon will appear on the left side icon bar. Clicking on icon will load the plugin in the side panel."
msgstr ""

#: ../../unittesting.md:16
msgid "<i>Alternatively, just select Solidity environment from Remix IDE Home tab. This will activate Solidity Unit Testing plugin along with Solidity Compiler, Deploy & Run Transactions & Solidity Static Analysis plugins.</i>"
msgstr ""

#: ../../unittesting.md:18
msgid "After successful loading, plugin looks like this:"
msgstr ""

#: ../../unittesting.md:22
msgid "Test directory"
msgstr ""

#: ../../unittesting.md:24
msgid "Plugin asks you to provide a directory which will be your workspace only for this plugin. To select directory, as soon as you add / to the path, it shows the possible options."
msgstr ""

#: ../../unittesting.md:28
msgid "Once selected, this directory will be used to load test files and to store newly generated test files."
msgstr ""

#: ../../unittesting.md:30
msgid "Default test directory is browser/tests."
msgstr ""

#: ../../unittesting.md:32
msgid "Generate"
msgstr ""

#: ../../unittesting.md:34
msgid "Select a solidity file which you want to test and click on the button Generate. It will generate a test file dedicated to selected file in the test directory."
msgstr ""

#: ../../unittesting.md:36
msgid "If no file is selected, it will still create a file with generic name as newFile_test.sol."
msgstr ""

#: ../../unittesting.md:38
msgid "This file contains sufficient information to give better understanding about developing tests for a contract."
msgstr ""

#: ../../unittesting.md:40
msgid "Generic file looks as:"
msgstr ""

#: ../../unittesting.md:86
msgid "Write Tests"
msgstr ""

#: ../../unittesting.md:88
msgid "Write sufficient unit tests to ensure that your contract works as expected under different scenarios."
msgstr ""

#: ../../unittesting.md:90
msgid "Remix injects a built-in assert library which can be used for testing. You can visit the library documentation here."
msgstr ""

#: ../../unittesting.md:92
msgid "Apart from this, Remix allows usage of some special functions in the test file to make testing more structural. They are as:"
msgstr ""

#: ../../unittesting.md:94
msgid "beforeEach() - Runs before each test"
msgstr ""

#: ../../unittesting.md:95
msgid "beforeAll() - Runs before all tests"
msgstr ""

#: ../../unittesting.md:96
msgid "afterEach() - Runs after each test"
msgstr ""

#: ../../unittesting.md:97
msgid "afterAll() - Runs after all tests"
msgstr ""

#: ../../unittesting.md:99
msgid "To get started, see this simple example."
msgstr ""

#: ../../unittesting.md:101
msgid "Run"
msgstr ""

#: ../../unittesting.md:103
msgid "Once you are done with writing tests, select the file(s) and click on Run to execute the tests. The execution will run in a separate environment. After completing the execution of one file, a test summary will be show as below:"
msgstr ""

#: ../../unittesting.md:107
msgid "For failed tests, there will be more assertion details to analyze the issue. Clicking on failed test will highlight the relevant line of code in the editor."
msgstr ""

#: ../../unittesting.md:109
msgid "Stop"
msgstr ""

#: ../../unittesting.md:111
msgid "If you have selected multiple files to run the tests and want to stop the execution, click on Stop button. It will stop execution after running the tests for current file."
msgstr ""

#: ../../unittesting.md:113
msgid "Customization"
msgstr ""

#: ../../unittesting.md:115
msgid "Remix facilitates users with various types of customizations to test a contract properly."
msgstr ""

#: ../../unittesting.md:117
msgid "1. Custom Compiler Context"
msgstr ""

#: ../../unittesting.md:119
msgid "Solidity Unit Testing refers to the Solidity Compiler plugin for compiler configurations. Configure Compiler, EVM Version, Enable Optimization & runs in the Solidity Compiler plugin and this will be used in the Solidity Unit Testing plugin for contract compilation before running unit tests."
msgstr ""

#: ../../unittesting.md:125
msgid "2. Custom Transaction Context"
msgstr ""

#: ../../unittesting.md:127
msgid "For interacting with a contract's method, the prime parameters of a transaction are from address, value & gas. Typically, a method's behaviour is tested with different values of these parameters."
msgstr ""

#: ../../unittesting.md:129
msgid "One can input custom values for msg.sender & msg.value of transaction using NatSpec comments, like:"
msgstr ""

#: ../../unittesting.md:139
msgid "<b>Instructions to use:</b>"
msgstr ""

#: ../../unittesting.md:141
msgid "Parameters must be defined in the method's NatSpec"
msgstr ""

#: ../../unittesting.md:142
msgid "Each parameter key should be prefixed with a hash (#) and end with a colon following a space (:Â ) like #sender:  & #value:"
msgstr ""

#: ../../unittesting.md:143
msgid "For now, customization is only available for parameters sender & value"
msgstr ""

#: ../../unittesting.md:144
msgid "Sender is the from address of a transaction which is accessed using msg.sender inside a contract method. It should be defined in a fixed format as 'account-<account_index>'"
msgstr ""

#: ../../unittesting.md:145
msgid "<account_index> varies from 0-2 before remix-ide release v0.10.0 and 0-9 afterwards"
msgstr ""

#: ../../unittesting.md:146
msgid "remix_accounts.sol must be imported in your test file to use custom sender"
msgstr ""

#: ../../unittesting.md:147
msgid "Value is value sent along with a transaction in wei which is accessed using msg.value inside a contract method. It should be a number."
msgstr ""

#: ../../unittesting.md:149
msgid "Regarding gas, Remix estimates the required gas for each transaction internally. Still if a contract deployment fails with Out-of-Gas error, it tries to redeploy it by doubling the gas. Deployment failing with double gas will show error: contract deployment failed after trying twice: The contract code couldn't be stored, please check your gas limit"
msgstr ""

#: ../../unittesting.md:151
msgid "Various test examples can be seen in examples section."
msgstr ""

#: ../../unittesting.md:154
msgid "Points to remember"
msgstr ""

#: ../../unittesting.md:157
msgid "A test contract cannot have a method with parameters. Having one such method will show error: Method 'methodname' can not have parameters inside a test contract"
msgstr ""

#: ../../unittesting.md:158
msgid "Number of test accounts are 3 before remix-ide release v0.10.0 and 10 afterwards"
msgstr ""

#: ../../unittesting.md:159
msgid "While a test file which imports remix_accounts.sol might not compile successfully with Solidity Compiler plugin, do not worry, this will have no bearing on its success with Solidity Unit Testing plugin."
msgstr ""

