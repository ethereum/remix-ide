# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-22, Remix;
# This file is distributed under the same license as the Remix - Ethereum
# IDE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Remix - Ethereum IDE 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-16 13:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../testing_using_Chai_&_Mocha.md:1
msgid "Testing using Chai & Mocha"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:4
msgid "(Supported since Remix IDE v0.22.0)"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:6
msgid ""
"Remix supports testing of your files in JavaScript using assertion "
"library Chai & test framework Mocha"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:8
msgid ""
"Chai is a BDD / TDD assertion library for node and the browser that can "
"be delightfully paired with any javascript testing framework."
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:10
msgid ""
"Mocha is a feature-rich JavaScript test framework running on Node.js and "
"in the browser, making asynchronous testing simple and fun."
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:12
msgid "Write tests"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:14
msgid ""
"Create a js file in your project workspace. Better to create it inside "
"scripts folder. Lets name it sample.test.js."
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:16
msgid "Write your tests in the file. Here is a sample:"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:33
msgid "Run tests"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:35
msgid ""
"Once done with writing the tests, right click on file name in File "
"Explorers plugin. It will show some options along with option to Run. "
"This Run option is used to run the JS scripts"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:39
msgid "Click on Run, tests will be executed and result will be shown on Terminal."
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:43
msgid "Test a contract"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:45
msgid ""
"Similarly unit tests can be written to test the functionality of a smart "
"contract. An example to test default 1_Storage.sol contract can be as:"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:86
#: ../../testing_using_Chai_&_Mocha.md:158
msgid "Result will be as:"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:90
msgid "Debugging a test transaction"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:92
msgid ""
"To debug a transaction in one of the tests, print the transaction hash "
"and input that in the Remix Debugger plugin."
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:96
msgid "Hardhat-ethers support"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:98
msgid ""
"Remix also supports methods of hardhat-ethers plugin of Hardhat "
"framework. Available methods under this plugin are:"
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:131
msgid "With this, one can run the tests for a hardhat project easily using Remix."
msgstr ""

#: ../../testing_using_Chai_&_Mocha.md:133
msgid "Example to test Storage contract with this plugin methods can be as:"
msgstr ""

