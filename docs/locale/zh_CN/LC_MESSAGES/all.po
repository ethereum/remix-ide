msgid ""
msgstr ""
"Project-Id-Version: remix-translation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-21 10:25+0200\n"
"PO-Revision-Date: 2023-10-17 13:52\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: remix-translation\n"
"X-Crowdin-Project-ID: 431830\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[ethereum.remix-ide] master/docs/_build/gettext/all.pot\n"
"X-Crowdin-File-ID: 6456\n"
"Language: zh_CN\n"

#: ../../assert_library.md:1
msgid "Remix Assert Library"
msgstr "Remix 断言库"

#: ../../assert_library.md:4
#: ../../assert_library.md:13
msgid "Assert.ok(value[, message])"
msgstr "Assert.ok(value[, message])"

#: ../../assert_library.md:5
#: ../../assert_library.md:27
msgid "Assert.equal(actual, expected[, message])"
msgstr "Assert.equal(actual, expected[, message])"

#: ../../assert_library.md:6
#: ../../assert_library.md:47
msgid "Assert.notEqual(actual, expected[, message])"
msgstr "Assert.notEqual(actual, expected[, message])"

#: ../../assert_library.md:7
#: ../../assert_library.md:63
msgid "Assert.greaterThan(value1, value2[, message])"
msgstr "Assert.greaterThan(value1, value2[, message])"

#: ../../assert_library.md:8
#: ../../assert_library.md:82
msgid "Assert.lesserThan(value1, value2[, message])"
msgstr "Assert.lesserThan(value1, value2[, message])"

#: ../../assert_library.md:11
msgid "Assert"
msgstr "断言"

#: ../../assert_library.md:14
msgid "value: <bool>"
msgstr "value: <bool>"

#: ../../assert_library.md:15
#: ../../assert_library.md:30
#: ../../assert_library.md:50
#: ../../assert_library.md:66
#: ../../assert_library.md:85
msgid "message: <string>"
msgstr "message: <string>"

#: ../../assert_library.md:17
msgid "Tests if value is truthy. message is returned in case of failure."
msgstr "测试`value`是否正确。 失败则返回对应的`message`。"

#: ../../assert_library.md:19
#: ../../assert_library.md:34
#: ../../assert_library.md:54
#: ../../assert_library.md:70
#: ../../assert_library.md:89
msgid "Examples:"
msgstr "示例："

#: ../../assert_library.md:28
#: ../../assert_library.md:48
msgid "actual: <uint | int | bool | address | bytes32 | string>"
msgstr "actual: <uint | int | bool | address | bytes32 | string>"

#: ../../assert_library.md:29
#: ../../assert_library.md:49
msgid "expected: <uint | int | bool | address | bytes32 | string>"
msgstr "expected: <uint | int | bool | address | bytes32 | string>"

#: ../../assert_library.md:32
msgid "Tests if actual & expected values are same. message is returned in case of failure."
msgstr "测试实际值和预期值是否相同。 失败则返回对应的消息。"

#: ../../assert_library.md:52
msgid "Tests if actual & expected values are not same. message is returned in case of failure."
msgstr "测试实际值和预期值是否不同。 如果失败则返回对应的消息。"

#: ../../assert_library.md:64
#: ../../assert_library.md:83
msgid "value1: <uint | int>"
msgstr "value2: <uint | int>"

#: ../../assert_library.md:65
#: ../../assert_library.md:84
msgid "value2: <uint | int>"
msgstr "value2: <uint | int>"

#: ../../assert_library.md:68
msgid "Tests if value1 is greater than value2. message is returned in case of failure."
msgstr "测试 value1 是否大于 value2。 失败时返回对应的消息。"

#: ../../assert_library.md:87
msgid "Tests if value1 is lesser than value2. message is returned in case of failure."
msgstr "测试 value1 是否小于 value2。 失败时返回消息。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../code_contribution_guide.md:1
msgid "Code Contribution Guide"
msgstr "代码贡献指南"

#: ../../code_contribution_guide.md:4
msgid "Remix is an open source tool and we encourage everyone to help us improve it. Please opening issues, give feedback or contribute by a pulling request to our codebase."
msgstr "Remix 是一个开源工具，我们鼓励大家帮助我们改进它。 请开启issue、提供反馈或通过pull request向我们的代码库做出贡献。"

#: ../../code_contribution_guide.md:8
msgid "The Remix application is built with JavaScript and it doesn't use any frameworks. We rely on a selected set of npm modules, like yo-yo, csjs-inject and among others. Check out the package.json files in the Remix submodules to learn more about the stack."
msgstr "Remix 应用程序是基于 JavaScript 构建的，它不使用任何框架。 我们依赖一组选定的 npm 模块，例如 yo-yo、csjs-inject 等。 查看 Remix 子模块中的 package.json 文件以了解有关技术栈的更多信息。"

#: ../../code_contribution_guide.md:10
msgid "To learn more, please visit our GitHub page."
msgstr "要了解更多信息，请访问我们的 GitHub 页面。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../community.md:1
msgid "Community Support"
msgstr "社区支持"

#: ../../community.md:4
msgid "We know that blockchain ecosystem is very new and that lots of information is scattered around the web. That is why we created a community support channel where we and other users try to answer your questions if you get stuck using Remix. Please, join the community and ask for help."
msgstr "我们知道区块链生态系统是非常新的，并且大量信息分散在网络上。 这就是为什么我们创建了一个社区支持频道，如果您在使用 Remix 时遇到问题，我们和其他用户会尝试回答您的问题。 请加入社区并寻求帮助。"

#: ../../community.md:8
msgid "For anyone who is interested in developing a custom plugin for Remix or who wants to contribute to the codebase, we opened a contributors' channel especially for developers working on Remix tools."
msgstr "对于有兴趣为 Remix 开发自定义插件或想要为代码库做出贡献的任何人，我们都开设了一个贡献者频道，特别是针对使用 Remix 工具的开发人员。"

#: ../../community.md:11
msgid "We would kindly ask you to respect the space and to use it for getting help with your work and the developers' channel for discussions related to working on Remix codebase. If you have ideas for collaborations or you want to promote your project, try to find some more appropriate channels to do so. Or you can contact the main contributors directly on Gitter or Twitter."
msgstr "我们恳请您尊重这个空间，并使用它来获得工作帮助，并使用开发人员的频道来讨论与 Remix 代码库相关的讨论。 如果您有合作的想法或想推广您的项目，请尝试找到一些更合适的渠道来这样做。 或者您可以直接在 Gitter 或 Twitter 上联系主要贡献者。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../compile.md:1
msgid "Compiler (Solidity)"
msgstr "编译器(Solidity)"

#: ../../compile.md:4
msgid "Clicking the Solidity icon in the icon panel brings you to the Solidty Compiler."
msgstr "单击图标面板中的 Solidity 图标，您将进入 Solidity 编译器"

#: ../../compile.md:6
msgid "Compiling is triggered when you click the compile button ( D. in image below). If you want the file to be compiled each time the file is saved or when another file is selected - check the auto compile checkbox ( E. in image below)."
msgstr "单击编译按钮(下图中的 D.) 会触发编译。 如果您希望在每次保存文件或选择另一个文件时编译文件 - 选中自动编译复选框(下图中的 E.)。"

#: ../../compile.md:8
msgid "Since the Solidity version 0.5.7, it is possible to compile Yul files. Please read the (solidity documentation about Yul) which contain some code examples. You can use the language dropdown ( B. in image below) to switch the language. This dropdown list is only available for versions greater than or equal to 0.5.7."
msgstr "从 Solidity 版本 0.5.7 开始，可以编译 Yul 文件。 请阅读包含一些代码示例的(有关 Yul 的可靠文档)。 您可以使用语言下拉菜单(下图中的 B.) 来切换语言。 此下拉列表仅适用于大于或等于 0.5.7 的版本。"

#: ../../compile.md:11
msgid "The fork selection dropdown list ( C. in image below) allows to compile code against a specific ethereum hard fork. The compiler default corresponds to the default hard fork used by a specific version. Please go to \"Compilation Details\" ( G. in image below) in the settings of Metadata section to see the harfork name used for the current compilation."
msgstr "分叉选择下拉列表(下图中的 C.) 允许针对特定的以太坊硬分叉编译代码。 编译器默认对应于特定版本使用的默认硬分叉。 请到 Metadata 部分设置中的“编译详细信息”(下图中的 G.) 查看当前编译使用的硬分叉名称。"

#: ../../compile.md:14
msgid "If the contract has a lot of dependencies it can take a while to compile - so you use autocompilation at your discretion."
msgstr "如果合约有很多依赖项，编译可能需要一段时间——因此您可以自行决定使用自动编译。"

#: ../../compile.md:18
msgid "After each compilation, a list is updated with all newly compiled contracts.  A compiled contract can be selected with the Contract pulldown menu ( F. in the image).  Multiple contracts are compiled when one contract imports other contracts.  Selecting a contract will show information about that one."
msgstr "每次编译后，都会使用所有新编译的合约更新列表。 可以使用合约下拉菜单(图中的 F.) 选择已编译的合约。 当一个合约导入其他合约时，会编译多个合约。 选择合约将显示有关该合约的信息。"

#: ../../compile.md:21
msgid "When the \"Compilation Details\" button is clicked ( G. in image), a modal opens displaying detailed information about the current selected contract."
msgstr "单击“编译详细信息”按钮(图像中的 G.) 时，将打开一个模式，显示有关当前所选合约的详细信息。"

#: ../../compile.md:23
msgid "For those writing your own custom solidity compiler, you can import that by clicking the + button (X. in the image) to open a modal where you can input the url of the compiler to be loaded."
msgstr "对于那些编写自己的自定义solidity编译器的人，您可以通过单击+按钮(图像中的X.) 打开一个模式来导入它，您可以在其中输入要加载的编译器的url。"

#: ../../compile.md:25
msgid "From the Solidity Compiler module you can also publish your contract to Swarm (only non abstract contracts can be published) & IPFS."
msgstr "从 Solidity 编译器模块，您还可以将合约发布到 Swarm(只能发布非抽象合约) 和 IPFS。"

#: ../../compile.md:28
msgid "Published data notably contains the abi and the solidity source code."
msgstr "发布的数据尤其包含 abi 和solidity 源代码。"

#: ../../compile.md:30
msgid "After a contract is published, you can find its metadata information using the bzz URL located in the details modal dialog SWARM LOCATION."
msgstr "合约发布后，您可以使用位于详细模式对话框 SWARM LOCATION 中的 bzz URL 找到其元数据信息。"

#: ../../compile.md:33
msgid "Compilation Errors and Warning are displayed below the contract section. At each compilation, the static analysis tab builds a report. It is important to address reported issues even if the compiler doesn't complain. (see more)"
msgstr "编译错误和警告显示在合约部分下方。 在每次编译时，静态分析选项卡都会生成一份报告。 即使编译器没有报错，解决报告的问题也很重要。(了解更多)"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../contract_metadata.md:1
msgid "Build Artifact"
msgstr "构建成果"

#: ../../contract_metadata.md:4
msgid "When a compilation succeeds, Remix creates two JSON files for each compiled contract.  One of these files captures the output from the Solidity compilation. This file will be named  contractName_metadata.json."
msgstr "当编译成功时，Remix 为每个编译的合约创建两个 JSON 文件。 其中一个文件捕获了 Solidity 编译的输出。 此文件将命名为 contractName_metadata.json。"

#: ../../contract_metadata.md:6
msgid "The other JSON file is named contractName.json . The contractName.json file contains the compilation's artifact that is needed for linking a library to the file. It contains the link to the libraries, the bytecode, the deployed bytecode, the gas estimation, the method identifiers, and the ABI."
msgstr "另一个 JSON 文件名为 contractName.json 。 contractName.json 文件包含将库链接到文件所需的编译工件。 它包含库的链接、字节码、部署的字节码、gas估算、方法标识符和 ABI。"

#: ../../contract_metadata.md:8
msgid "In order to generate these artifact files, the Generate contract metadata box in the General settings section of the Settings module needs to be checked.  The these metadatas files will then be generated when you compile a file and will be placed in the artifacts folder - which you can see in the Files Explorers plugin."
msgstr "为了生成这些artifact文件，需要选中设置模块的常规设置部分中的生成合约元数据框。 这些元数据文件将在您编译文件时生成，并将放置在 artifacts 文件夹中 - 您可以在 Files Explorers 插件中看到该文件夹。"

#: ../../contract_metadata.md:10
msgid "You can write scripts that can access either of these files."
msgstr "你可以编写脚本来访问这两个文件中的任何一个。"

#: ../../contract_metadata.md:12
msgid "Library Deployment with filename.json"
msgstr "使用 filename.json 部署库"

#: ../../contract_metadata.md:15
msgid "By default Remix automatically deploys needed libraries."
msgstr "默认情况下，Remix 会自动部署所需的库。"

#: ../../contract_metadata.md:17
msgid "When you open the metadata file for the libraries - artifact/filename.json you will see the following sections:"
msgstr "当您打开库的元数据文件 - artifact/filename.json 时，您将看到以下部分："

#: ../../contract_metadata.md:19
msgid "linkReferences contains a map representing libraries which depend on the current contract. Values are addresses of libraries used for linking the contract."
msgstr "linkReferences 包含一个表示依赖于当前合约的库的映射。 值是用于链接合约的程序库的地址。"

#: ../../contract_metadata.md:22
msgid "autoDeployLib defines if the libraries should be auto deployed by Remix or if the contract should be linked with libraries described in linkReferences"
msgstr "autoDeployLib 定义库是否应由 Remix 自动部署，或者合约是否应与 linkReferences 中描述的程序库链接"

#: ../../contract_metadata.md:24
msgid "Note that Remix will resolve addresses corresponding to the current network. By default, a configuration key follows the form: <network_name>:<networkd_id>, but it is also possible to define <network_name> or <network_id> as keys."
msgstr "请注意，Remix 将解析与当前网络对应的地址。 默认情况下，配置键遵循以下形式：<network_name>:<networkd_id>，但也可以将 <network_name> 或 <network_id> 定义为键。"

#: ../../contract_metadata.md:28
msgid "Here is a sample metadata file for linking a library:"
msgstr "这是用于链接库的示例元数据文件："

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../create_deploy.md:1
msgid "Creating and Deploying a Contract"
msgstr "创建和部署合约"

#: ../../create_deploy.md:4
msgid "There are 3 type of environments Remix can be plugged to: Javascript VM, Injected provider, or Web3 provider. (for details see Running transactions)"
msgstr "Remix 可以插入 3 种类型的环境：Javascript VM、Injected 提供程序或 Web3 提供程序。 (有关详细信息，请参阅运行事务)"

#: ../../create_deploy.md:7
msgid "Both Web3 provider and Injected provider require the use of an external tool."
msgstr "Web3 提供商和 Injected 提供商都需要使用外部工具。"

#: ../../create_deploy.md:10
msgid "The external tool for Web3 provider is an Ethereum node and for Injected provider Metamask."
msgstr "Web3 提供商的外部工具是以太坊节点和 Injected 提供商 Metamask。"

#: ../../create_deploy.md:13
msgid "The JavaScript VM mode is convenient because each execution runs in your browser and you don't need any other software or Ethereum node to run it."
msgstr "JavaScript VM 模式很方便，因为每次执行都在您的浏览器中运行，您不需要任何其他软件或以太坊节点来运行它。"

#: ../../create_deploy.md:16
msgid "So, it is the easiest test environment - no setup required!"
msgstr "因此，它是最简单的测试环境 - 无需设置！"

#: ../../create_deploy.md:18
msgid "But keep in mind that reloading the browser when you are in the Javascript VM will restart Remix in an empty state."
msgstr "但请记住，当您在 Javascript VM 中时重新加载浏览器会以空状态重新启动 Remix。"

#: ../../create_deploy.md:20
msgid "For performance purposes ( which is to say - for testing in an environment that is closest to the mainnet), it might also be better to use an external node."
msgstr "出于性能目的(也就是说 - 在最接近主网的环境中进行测试)，使用外部节点可能会更好。"

#: ../../create_deploy.md:22
msgid "Selecting the VM mode"
msgstr "选择 VM 模式"

#: ../../create_deploy.md:25
msgid "Make sure the VM mode is selected. All accounts displayed in Accounts should have 100 ether."
msgstr "确保选择了 VM 模式。 Accounts 中显示的所有账户都应该有 100 个ETH。"

#: ../../create_deploy.md:28
msgid "Sample contract"
msgstr "合约示范"

#: ../../create_deploy.md:57
msgid "This contract is very basic. The goal is to quickly start to create and to interact with a sample contract."
msgstr "这份合约非常基础。 目标是快速开始创建示例合约并与之交互。"

#: ../../create_deploy.md:60
msgid "Deploying an instance"
msgstr "部署实例"

#: ../../create_deploy.md:63
msgid "The Compile tab displays information related to the current contract (note that there can be more than one) (see compile)."
msgstr "编译选项卡显示与当前合约相关的信息(注意可以有多个)(参见编译)。"

#: ../../create_deploy.md:66
msgid "Moving on, in the Run tab select, JavaScript VM to specify that you are going to deploy an instance of the contract in the JavaScript VM state."
msgstr "继续，在 Run 选项卡中选择 JavaScript VM，以指定您将在 JavaScript VM 状态下部署合同实例。"

#: ../../create_deploy.md:72
msgid "The constructor of Ballot.sol needs a parameter (of type uint8). Give any value and click on Deploy."
msgstr "Ballot.sol 的构造函数需要一个参数(类型为 uint8)。 给出任何值并单击部署。"

#: ../../create_deploy.md:75
msgid "The transaction which deploys the instance of Ballot is created."
msgstr "创建部署 Ballot 实例的事务。"

#: ../../create_deploy.md:77
msgid "In a \"normal\" blockchain, it can take several seconds to execute. This is the time for the transaction to be mined. However, because we are using the JavaScript VM, our execution is immediate."
msgstr "在“正常”区块链中，执行可能需要几秒钟。 这是交易被挖掘的时间。 但是，因为我们使用的是 JavaScript VM，所以我们的执行是立即的。"

#: ../../create_deploy.md:81
msgid "The terminal will inform you about the transaction. You can see details there and start debugging."
msgstr "终端机将通知您有关交易的信息。 您可以在那里查看详细信息并开始调试。"

#: ../../create_deploy.md:84
msgid "The newly created instance is displayed in the run tab."
msgstr "新创建的实例显示在运行选项卡中。"

#: ../../create_deploy.md:88
msgid "Interacting with an instance"
msgstr "与实例交互"

#: ../../create_deploy.md:91
msgid "This new instance contains 3 actions which corresponds to the 3 functions (setP, setPN, get). Clicking on SetP or SetPN will create a new transaction."
msgstr "这个新实例包含对应于 3 个函数(setP、setPN、get) 的 3 个动作。 单击 SetP 或 SetPN 将创建一个新事务。"

#: ../../create_deploy.md:95
msgid "Note that SetP is payable (red button) : it is possible to send value (Ether) to the contract."
msgstr "请注意，SetP 是应付(红色按钮)：可以向合约发送值(以太币)。"

#: ../../create_deploy.md:98
msgid "SetPN is not payable (orange button - depending on the theme) : it is not possible to send value (Ether) to the contract."
msgstr "SetPN 不支付(橙色按钮 - 取决于主题)：无法向合约发送值(以太币)。"

#: ../../create_deploy.md:101
msgid "Clicking on get will not execute a transaction (usually its a blue button - depending on the theme). It doesn't execute a transaction because a get does not modify the state (variable value) of this instance."
msgstr "单击获取不会执行交易(通常是蓝色按钮 - 取决于主题)。 它不会执行事务，因为 get 不会修改此实例的状态(变量值)。"

#: ../../create_deploy.md:104
msgid "As get is view you can see the return value just below the action."
msgstr "作为 get 视图，您可以在操作下方看到返回值。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../debugger.md:1
msgid "Debugger"
msgstr "调试器"

#: ../../debugger.md:4
msgid "This module allows you to debug the transaction. It can be used to deploy transactions created from Remix and already mined transactions. (debugging works only if the current environment provides the necessary features)."
msgstr "该模块允许您调试事务。 它可用于部署从 Remix 创建的交易和已挖掘的交易。(仅当当前环境提供必要的功能时，调试才有效)。"

#: ../../debugger.md:9
msgid "To get to the debugger - you can click the debug button in the terminal when a successful or failed transaction appears there.  You can also load the module from the plugin manager and then click the bug in the icon panel.  Or you can get to the debugger by running the debug command in the console."
msgstr "要进入调试器 - 当成功或失败的事务出现在终端时，您可以单击终端中的调试按钮。 您还可以从插件管理器加载模块，然后单击图标面板中的错误。 或者，您可以通过在控制台中运行调试命令来访问调试器。"

#: ../../debugger.md:14
msgid "To learn more about how to use this tool go to the debugger tutorial."
msgstr "要了解有关如何使用此工具的更多信息，请访问调试器教程。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../FAQ.md:1
msgid "FAQ"
msgstr "常见问题"

#: ../../FAQ.md:4
msgid "Solidity compiler"
msgstr "Solidity 编译器"

#: ../../FAQ.md:6
msgid "Q: Error: compiler might be in a non-sane state"
msgstr "问：错误：编译器可能处于非正常状态"

#: ../../FAQ.md:13
msgid "A: Old versions of solidity compiler had this problem with chrome. Please change the compiler version in Solidity Plugin to the newer one or use another browser."
msgstr "答：旧版本的solidity 编译器在chrome 中存在这个问题。 请将 Solidity Plugin 中的编译器版本更改为较新的版本或使用其他浏览器。"

#: ../../FAQ.md:16
msgid "Q: I’m getting an issue with Maximum call stack exceed and various other errors, can't compile."
msgstr "问：我遇到了最大调用堆栈超出和其他各种错误的问题，无法编译。"

#: ../../FAQ.md:18
msgid "A:  Try a different browser or a newer solidity compiler version."
msgstr "答：尝试不同的浏览器或更新的solidity 编译器版本。"

#: ../../FAQ.md:20
msgid "Q: How to verify a contract that imports other contracts?"
msgstr "问：如何验证导入其他合约的合约？"

#: ../../FAQ.md:22
msgid "A:  The verification tool does not recursively go through the import statments in a contract.  So can only verify a 'flattened' contract."
msgstr "答：验证工具不会递归地遍历合约中的导入语句。 所以只能验证一个“扁平化”的合约。"

#: ../../FAQ.md:24
msgid "There is a plugin called Flattener which will stuff all the original code and the imported code into a single file."
msgstr "有一个名为 Flattener 的插件，它将所有原始代码和导入的代码填充到一个文件中。"

#: ../../FAQ.md:26
msgid "Deploy & Run"
msgstr "部署和运行"

#: ../../FAQ.md:28
msgid "Q: I am using an Infura endpoint in my app, but when I try to deploy against that endpoint in remix IDE selecting \"web3 provider\" and putting my endpoint in, it's telling me that it can't connect"
msgstr "问：我在我的应用程序中使用 Infura 端点，但是当我尝试在 remix IDE 中选择“web3 提供程序”并放入我的端点时针对该端点进行部署时，它告诉我它无法连接"

#: ../../FAQ.md:30
msgid "A: If the endpoint you are using is http, it won't work."
msgstr "答：如果您使用的端点是http，它将无法正常工作。"

#: ../../FAQ.md:32
msgid "Q: Where is deploy button?"
msgstr "问：部署按钮在哪里？"

#: ../../FAQ.md:34
msgid "A: Its in the Deploy & Run module. If you haven't activated that module, you should do that by clicking Deploy & Run module in the Plugin Manager. You could also activate everything you need to work with solidity on the landing page ( click the remix logo at the top left for the screen) and click the \"Solidity\" button in the environment section."
msgstr "答: 它在 Deploy & Run 模块中。 如果您尚未激活该模块，则应通过单击插件管理器中的部署和运行模块来执行此操作。 您还可以在登录页面上激活使用 Solidity 所需的所有内容(单击屏幕左上角的 remix 徽标)，然后单击环境部分中的“Solidity”按钮。"

#: ../../FAQ.md:37
msgid "Q: How to pass a tuple to a public function in Remix?"
msgstr "问：如何将元组传递给 Remix 中的公共函数？"

#: ../../FAQ.md:39
msgid "A: Pass it as an array []."
msgstr "答：将其作为数组 [] 传递。"

#: ../../FAQ.md:41
msgid "Q: How to input a struct as input to a parameter of a function in the Deploy & Run module?"
msgstr "问：如何在Deploy & Run模块中输入一个struct作为函数参数的输入？"

#: ../../FAQ.md:43
msgid "A: For inputting a struct, just like a tuple, pass it in as an array [].  Also you need to put in the line:"
msgstr "答：输入一个结构体，就像一个元组一样，将它作为一个数组[] 传入。 您还需要输入以下内容："

#: ../../FAQ.md:45
msgid "pragma experimental ABIEncoderV2; at the top of the solidity file."
msgstr "pragma 实验性 ABIEncoderV2； 在solidity文件的顶部。"

#: ../../FAQ.md:47
msgid "For example, here's a solidity file with a struct is an input parameter."
msgstr "例如，这里有一个带有 struct 的solidity 文件作为输入参数。"

#: ../../FAQ.md:79
msgid "The input of initPeepToPeeps takes a struct.  If you input [1,2] the transaction will go through."
msgstr "InitPeepToPeeps 的输入采用结构。 如果您输入 [1,2]，则交易将通过。"

#: ../../FAQ.md:83
msgid "General"
msgstr "常规"

#: ../../FAQ.md:85
msgid "Q: Where do plugin developers go with their questions?"
msgstr "问：插件开发人员会去哪里解决他们的问题？"

#: ../../FAQ.md:87
msgid "A: The Gitter Remix plugin developers room https://gitter.im/ethereum/remix-dev-plugin"
msgstr "答: Gitter Remix 插件开发者室 https://gitter.im/ethereum/remix-dev-plugin"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../file_explorer.md:1
msgid "File Explorers"
msgstr "文件资源管理器"

#: ../../file_explorer.md:4
msgid "To get to the File Explorers module - click the file explorers icon."
msgstr "要进入文件资源管理器模块 - 单击文件资源管理器图标。"

#: ../../file_explorer.md:8
msgid "The basic files explorer lists all the files stored in your browser's browser storage. You can see them in the browser folder."
msgstr "基本文件资源管理器列出了存储在浏览器浏览器存储中的所有文件。 您可以在浏览器文件夹中看到它们。"

#: ../../file_explorer.md:11
msgid "Important Note: Clearing the browser storage will permanently delete all the solidity files stored there. This is an inherent limitation of a browser-based IDE.  However, if you want to store files outside of the browser and on your computer's filesystem, use Remixd or use the desktop version of Remix-IDE. RemixD enables you to have access to a selected folder on your hard drive. Remix Desktop is a version of Remix-IDE in an Electron app."
msgstr "重要提示：清除浏览器存储将永久删除存储在那里的所有 Solidity 文件。 这是基于浏览器的 IDE 的固有限制。 但是，如果您想在浏览器之外和计算机的文件系统上存储文件，请使用 Remixd 或使用 Remix-IDE 的桌面版本。 RemixD 使您可以访问硬盘驱动器上的选定文件夹。 Remix Desktop 是 Electron 应用程序中的 Remix-IDE 版本。"

#: ../../file_explorer.md:14
msgid "You can rename, remove or add new files to the file explorer."
msgstr "您可以在文件资源管理器中重命名、删除或添加新文件。"

#: ../../file_explorer.md:19
msgid "We will start by reviewing the icons in the image above."
msgstr "我们将从查看上图中的图标开始。"

#: ../../file_explorer.md:21
msgid "The book icon - A. is the link to the module's documentation."
msgstr "书本图标 - A. 是模块文档的链接。"

#: ../../file_explorer.md:23
msgid "The icons to the right of the browser file explorer in the image above only appear for browser storage."
msgstr "上图中浏览器文件浏览器右侧的图标仅用于浏览器存储。"

#: ../../file_explorer.md:25
msgid "Create new File"
msgstr "创建新文件"

#: ../../file_explorer.md:28
msgid "The icon marked B. above. Creates a new file."
msgstr "上面标有 B. 的图标。 创建一个新文件。"

#: ../../file_explorer.md:30
msgid "Publish to Gist"
msgstr "发布到 Gist"

#: ../../file_explorer.md:33
msgid "The icon marked C. above. Publishes all files from the browser folder to a gist.  Only file in the root of browser will be published.  Files in subfolders will not be publish to the Gist. Gist API has changed in 2018 and requires users to be authenticated to be able to publish a gist."
msgstr "上面标有 C. 的图标。 将浏览器文件夹中的所有文件发布到 gist。 只会发布浏览器根目录中的文件。 子文件夹中的文件不会发布到 Gist。 Gist API 在 2018 年发生了变化，要求用户经过身份验证才能发布 gist。"

#: ../../file_explorer.md:36
msgid "Click this link to Github tokens setup and select Generate new token. Then check the Create gists checkbox and generate a new token."
msgstr "单击此链接到 Github 令牌设置并选择生成新代币。 然后选中 Create gists 复选框并生成一个新代币。"

#: ../../file_explorer.md:38
msgid "Take the token and paste it in Remix's Settings module in the Github Access Token section. And then click Save. Now you should be able to use the feature."
msgstr "获取代币并将其粘贴到 Remix 的设置模块中的 Github 访问代币部分。 然后单击保存。 现在您应该可以使用该功能了。"

#: ../../file_explorer.md:40
msgid "Create a folder"
msgstr "创建一个文件夹"

#: ../../file_explorer.md:43
msgid "The icon marked D. above.  Creates a new folder in browser file explorer."
msgstr "上面标有 D. 的图标。 在浏览器文件资源管理器中创建一个新文件夹。"

#: ../../file_explorer.md:45
msgid "Context Menu (Right Click)"
msgstr "上下文菜单(右键单击)"

#: ../../file_explorer.md:47
msgid "Right click on a file or a folder and the context menu will appear."
msgstr "右键单击文件或文件夹，将出现上下文菜单。"

#: ../../file_explorer.md:51
msgid "You can rename or delete a selected file or a folder. You can also create a folder."
msgstr "您可以重命名或删除选定的文件或文件夹。 您也可以创建一个文件夹。"

#: ../../file_explorer.md:53
msgid "To create a file with the context menu, right click on a folder to get the Create File option. A file will be created inside that folder."
msgstr "要使用上下文菜单创建文件，请右键单击文件夹以获取“创建文件”选项。 将在该文件夹中创建一个文件。"

#: ../../file_explorer.md:57
msgid "The functionality of the context menu also works with RemixD (which gives you have access to a folder on your hard drive)."
msgstr "上下文菜单的功能也适用于 RemixD(它使您可以访问硬盘驱动器上的文件夹)。"

#: ../../file_explorer.md:59
msgid "Note: When working with RemixD, you need to open and close the localhost folder to refresh the view."
msgstr "注意：使用 RemixD 时，您需要打开和关闭 localhost 文件夹以刷新视图。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../import.md:1
msgid "Importing Source Files in Solidity"
msgstr "在 Solidity 中导入源文件"

#: ../../import.md:4
msgid "There are multiple techniques for importing files into Remix."
msgstr "将文件导入 Remix 有多种技术。"

#: ../../import.md:6
msgid "For a tutorial about importing files click here.  You can also find this tutorial in the Remix Workshops plugin."
msgstr "有关导入文件的教程，请单击此处。 您还可以在 Remix Workshops 插件中找到本教程。"

#: ../../import.md:8
msgid "For a detailed explanation of the import keyword see the Solidity documentation"
msgstr "有关 import 关键字的详细说明，请参阅 Solidity 文档"

#: ../../import.md:11
msgid "Here are a some of the main methods of importing a file:"
msgstr "以下是导入文件的一些主要方法："

#: ../../import.md:13
msgid "Importing a file from the browser's local storage"
msgstr "从浏览器的本地存储导入文件"

#: ../../import.md:16
msgid "Files in Remix can be imported with the import key word with the path to the file. Use ./ for relative paths to increase portability."
msgstr "Remix 中的文件可以使用带有文件路径的 import 关键字导入。 使用 ./ 作为相对路径以增加可移植性。"

#: ../../import.md:24
msgid "Importing a file from your computer's filesystem"
msgstr "从计算机的文件系统导入文件"

#: ../../import.md:27
msgid "This method uses remixd - the remix daemon.  Please go to the remixd tutorial for instructions about how to bridge the divide between the browser and your computers filesystem."
msgstr "此方法使用 remixd - remix 守护程序。 请转到 remixd 教程以获取有关如何弥合浏览器和计算机文件系统之间鸿沟的说明。"

#: ../../import.md:30
msgid "Importing from GitHub"
msgstr "从 GitHub 导入"

#: ../../import.md:33
msgid "It is possible to import files directly from GitHub.  You should specify the release tag (where available), otherwise you will get the latest code in the master branch.  For OpenZeppelin Contracts you should only use code published in an official release, the example below imports from OpenZeppelin Contracts v2.5.0."
msgstr "可以直接从 GitHub 导入文件。 您应该指定发布标签(如果可用)，否则您将在主分支中获得最新代码。 对于 OpenZeppelin Contracts，您应该只使用在官方版本中发布的代码，下面的示例从 OpenZeppelin Contracts v2.5.0 导入。"

#: ../../import.md:42
msgid "Importing from Swarm"
msgstr "从 Swarm 导入"

#: ../../import.md:45
msgid "Files can be imported using all URLs supported by swarm. If you do not have a swarm node, then use swarm-gateways.net."
msgstr "可以使用 swarm 支持的所有 URL 导入文件。 如果您没有 swarm 节点，请使用 swarm-gateways.net。"

#: ../../import.md:52
msgid "Importing from IPFS"
msgstr "从 IPFS 导入"

#: ../../import.md:55
msgid "Files can be imported from IPFS."
msgstr "文件可以从 IPFS 导入。"

#: ../../import.md:61
msgid "Importing from the console"
msgstr "从控制台导入"

#: ../../import.md:64
msgid "You can also use a remix command remix.loadurl('<the_url>')in the console. You should specify the release tag (where available), otherwise you will get the latest code in the master branch. For OpenZeppelin Contracts you should only use code published in an official release, the example below imports from OpenZeppelin Contracts v2.5.0."
msgstr "您还可以在控制台中使用remix命令 remix.loadurl('<the_url>')。 您应该指定发布标签(如果可用)，否则您将在主分支中获得最新代码。 对于 OpenZeppelin Contracts，您应该只使用在官方版本中发布的代码，下面的示例从 OpenZeppelin Contracts v2.5.0 导入。"

#: ../../import.md:70
msgid "Notice that this will create a github folder in the file explorer.  To load a file in the github folder, you would use a command like this:"
msgstr "请注意，这将在文件资源管理器中创建一个 github 文件夹。 要在 github 文件夹中加载文件，您可以使用如下命令："

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../index.rst:2
msgid "Welcome to Remix documentation!"
msgstr "欢迎使用 Remix 文档！"

#: ../../index.rst:4
msgid "Remix is a powerful, open source tool that helps you write Solidity contracts straight from the browser. Written in JavaScript, Remix supports both usage in the browser and locally."
msgstr "Remix 是一个功能强大的开源工具，可帮助您直接从浏览器编写 Solidity 合约。 Remix 用 JavaScript 编写，支持在浏览器和本地使用"

#: ../../index.rst:7
msgid "Remix also supports testing, debugging and deploying of smart contracts and much more."
msgstr "Remix 还支持智能合约的测试、调试和部署等等。"

#: ../../index.rst:9
msgid "Our Remix project with all its features is available at `remix.ethereum.org <https://remix.ethereum.org>`__ and more information can be found in these docs.  Our IDE tool is available at `our GitHub repository <https://github.com/ethereum/remix-ide>`__."
msgstr "`remix.ethereum.org <https://remix.ethereum.org>`__ 上提供了我们的 Remix 项目及其所有功能，更多信息可以在这些文档中找到。 我们的 IDE 工具可在`我们的 GitHub 存储库 <https://github.com/ethereum/remix-ide>`__ 中获得。"

#: ../../index.rst:14
msgid "This set of documents covers instructions on how to use Remix and some tutorials to help you get started."
msgstr "这组文档涵盖了有关如何使用 Remix 的说明以及一些帮助您入门的教程。"

#: ../../index.rst:16
msgid "Useful links:"
msgstr "实用链接："

#: ../../index.rst:18
msgid "`Solidity documentation <https://solidity.readthedocs.io>`__"
msgstr "`Solidity 文档 <https://solidity.readthedocs.io>`__"

#: ../../index.rst:20
msgid "`Remix alpha <https://remix-alpha.ethereum.org>`__ - The version where we test new Remix release (not stable!)."
msgstr "`Remix alpha <https://remix-alpha.ethereum.org>`__ - 我们测试新 Remix 发行版本的版本(不稳定！)。"

#: ../../index.rst:22
msgid "`Remix on Medium <https://medium.com/remix-ide>`__"
msgstr "`Remix在Medium上 <https://medium.com/remix-ide>`__"

#: ../../index.rst:24
msgid "`Ethereum StackExchange for Remix <https://ethereum.stackexchange.com/questions/tagged/remix>`__"
msgstr "`用于Remix的以太坊 StackExchange <https://ethereum.stackexchange.com/questions/tagged/remix>`__"

#: ../../index.rst:26
msgid "`Community support channel <https://gitter.im/ethereum/remix>`__"
msgstr "`社区支持频道<https://gitter.im/ethereum/remix>`__"

#: ../../index.rst:28
msgid "`Ðapp Developer resources (Ethereum wiki) <https://github.com/ethereum/wiki/wiki/Dapp-Developer-Resources>`__"
msgstr "`Ðapp 开发者资源(以太坊维基)<https://github.com/ethereum/wiki/wiki/Dapp-Developer-Resources>`__"

#: ../../index.rst:30
msgid "New Layout Intro"
msgstr "新布局介绍"

#: ../../index.rst:36
msgid "Tour of default modules"
msgstr "默认模块之旅"

#: ../../index.rst:46
msgid "Tour of typical solidity modules"
msgstr "典型 Solidity 模块之旅"

#: ../../index.rst:56
msgid "Solidity Unit Testing"
msgstr "Solidity 单元测试"

#: ../../index.rst:64
msgid "Using Remix"
msgstr "使用 Remix"

#: ../../index.rst:76
msgid "Miscellaneous"
msgstr "其它选项"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../layout.md:1
msgid "Remix-IDE Layout"
msgstr "Remix-IDE 布局"

#: ../../layout.md:4
msgid "The new structure"
msgstr "新结构"

#: ../../layout.md:8
msgid "Icon Panel - click to change which plugin appears in the Side Panel"
msgstr "图标面板 - 单击以更改侧面板中显示的插件"

#: ../../layout.md:9
msgid "Side Panel - Most but not all plugins will have their GUI here."
msgstr "侧面板 - 大多数但不是所有的插件都会在这里有它们的 GUI。"

#: ../../layout.md:10
msgid "Main Panel - In the old layout this was just for editing files.  In the tabs can be plugins or files for the IDE to compile."
msgstr "主面板 - 在旧布局中，这仅用于编辑文件。 选项卡中可以是 IDE 编译的插件或文件。"

#: ../../layout.md:11
msgid "Terminal - where you will see the results of your interactions with the GUI's.  Also you can run scripts here."
msgstr "终端 - 您将在其中看到与 GUI 交互的结果。 您也可以在此处运行脚本。"

#: ../../layout.md:13
msgid "Icon Panel at Page Load"
msgstr "页面加载时的图标面板"

#: ../../layout.md:15
msgid "When you load remix - the icon panel show these icons by default."
msgstr "当您加载 Remix - 图标面板默认显示这些图标。"

#: ../../layout.md:19
msgid "Everything in remix is now a plugin...  so the Plugin Manager is very important. In the old layout, each basic task in remix was separated into the tabs.  Now these tabs are plugins."
msgstr "Remix 中的所有内容现在都是插件...... 所以插件管理器非常重要。 在旧布局中，Remix 中的每个基本任务都被分成选项卡。 现在这些选项卡是插件。"

#: ../../layout.md:22
msgid "But to activate a half a dozen plugins - (or however many you are using) each time the page load is tedious.  So learn about the Environments."
msgstr "但是每次页面加载时要激活六个插件(或您正在使用的插件) 是很乏味的。 所以要了解环境。"

#: ../../layout.md:24
msgid "Homepage"
msgstr "主页"

#: ../../layout.md:29
msgid "The homepage is located in a tab in the Main Panel."
msgstr "主页位于主面板中的选项卡中。"

#: ../../layout.md:31
msgid "You can also get there by clicking the remix logo at the top of the icon panel."
msgstr "您也可以通过单击图标面板顶部的Remix徽标来到达那里。"

#: ../../layout.md:33
msgid "Environments"
msgstr "环境"

#: ../../layout.md:34
msgid "Clicking on one of the environment buttons loads up a collection of plugins.  We currently have a Solidity Button and a Vyper button.  In the future you will be able to save your own environment."
msgstr "单击其中一个环境按钮会加载一组插件。 我们目前有一个 Solidity 按钮和一个 Vyper 按钮。 将来，您将能够保存自己的环境。"

#: ../../layout.md:36
msgid "To see all the plugins go to the plugin manager - by selecting the plug in the icon panel."
msgstr "要查看所有插件，请转到插件管理器 - 通过在图标面板中选择插件。"

#: ../../layout.md:39
msgid "The environment buttons are time & sanity savers - so you don't need to go to the plugin manager to get started everytime you load the page."
msgstr "环境按钮可以节省时间和精力—因此您无需在每次加载页面时都去插件管理器开始使用。"

#: ../../layout.md:42
msgid "Plugin Manager"
msgstr "插件管理器"

#: ../../layout.md:45
msgid "In order to make Remix flexible for integrating changes into its functionality and for integrating remix into other projects (your's for example), we've now made everything a plugin.  This means that you only load the functionality you need.  It also means that you need a place to turn off and on plugins - as your needs change.  This all happens in the plug manager."
msgstr "为了使 Remix 能够灵活地将更改集成到其功能中，并将 Remix 集成到其他项目(例如您的项目) 中，我们现在将所有内容都做成了插件。 这意味着您只加载您需要的功能。 这也意味着您需要一个地方来关闭和打开插件 - 随着您的需求变化。 这一切都发生在插件管理器中。"

#: ../../layout.md:47
msgid "The Plugin Manager is also the place you go when you are creating your own plugin and you want to load your local plugin into Remix. In that case you'd click on the \"Connect to a Local Plugin\" link at the top of the Plugin Manager panel."
msgstr "当您创建自己的插件并且想要将本地插件加载到 Remix 中时，插件管理器也是您要去的地方。 在这种情况下，您可以单击插件管理器面板顶部的“连接到本地插件”链接。"

#: ../../layout.md:49
msgid "Themes"
msgstr "主题"

#: ../../layout.md:52
msgid "So you want to work on Remix with a dark theme or a gray theme or just a different theme that the one you are currently looking at?  Go to the settings tab and at the bottom is a choice of lots of bootstrap based themes."
msgstr "因此，您想使用深色主题或灰色主题或只是与您当前正在查看的主题不同的主题来制作 Remix？ 转到设置选项卡，底部是许多基于引导程序的主题的选择。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../locations.md:1
msgid "Remix URLs & Links with Parameters"
msgstr "Remix重置链接和参数"

#: ../../locations.md:4
msgid "Remix URLs"
msgstr "Remix 重置链接"

#: ../../locations.md:5
msgid "An online version is available at https://remix.ethereum.org. This version is stable and is updated at almost every release."
msgstr "在线版本可在 https://remix.ethereum.org 获得。 这个版本很稳定，几乎每个版本都会更新。"

#: ../../locations.md:6
msgid "An alpha online version is available at https://remix-alpha.ethereum.org. This is not a stable version."
msgstr "Https://remix-alpha.ethereum.org 上提供了 alpha 在线版本。 这不是一个稳定的版本。"

#: ../../locations.md:8
msgid "Github repo: https://github.com/ethereum/remix-project . The README contains instructions for running Remix-IDE locally."
msgstr "Github 仓库：https://github.com/ethereum/remix-project。 自述文件包含在本地运行 Remix-IDE 的说明。"

#: ../../locations.md:10
msgid "Github release: https://github.com/ethereum/remix-project/releases ."
msgstr "Github 发布：https://github.com/ethereum/remix-project/releases。"

#: ../../locations.md:13
msgid "Embedding & Linking to Remix"
msgstr "嵌入和链接到Remix"

#: ../../locations.md:15
msgid "Remix-IDE's urls have parameters -so it is possible to specify:"
msgstr "Remix-IDE url 有参数 - 所以可以指定："

#: ../../locations.md:16
msgid "the list of plugins you want activated"
msgstr "您要激活的插件列表"

#: ../../locations.md:17
msgid "the theme (Dark or Light)"
msgstr "主题(暗色或亮色)"

#: ../../locations.md:18
msgid "the panels that should be minimized"
msgstr "面板需要最小化"

#: ../../locations.md:19
msgid "if you want the Solidity compiler to have optimize enabled"
msgstr "如果您希望 Solidity 编译器启用优化"

#: ../../locations.md:21
msgid "In the following example, there is a list of plugins that follows the word plugins will be activated and the last plugin will gain the focus."
msgstr "在下面的示例中，有一个插件列表，后面跟着单词 plugins will beactivated 并且最后一个插件将获得专注。"

#: ../../locations.md:26
msgid "For the plugin are called by their name in their profile.  To check for a plugin's profile name - for plugins built by external teams, please go to https://github.com/ethereum/remix-plugins-directory/tree/master/plugins"
msgstr "因为插件在他们的个人资料中被他们的名字所调用。 要检查插件的配置文件名称 - 对于外部团队构建的插件，请转到 https://github.com/ethereum/remix-plugins-directory/tree/master/plugins"

#: ../../locations.md:28
msgid "Further Customization with URL parameters"
msgstr "使用 URL 参数进行进一步自定义"

#: ../../locations.md:30
msgid "The following URL will close everything except the main panel & the icon panel (so the side and terminal are minimized)"
msgstr "以下 URL 将关闭除主面板和图标面板之外的所有内容（因此将侧面和终端最小化）"

#: ../../locations.md:32
msgid "https://remix.ethereum.org/?#embed=true"
msgstr "https://remix.ethereum.org/?#embed=true"

#: ../../locations.md:34
msgid "To link with the side panel minimized use this URL:"
msgstr "要链接到最小化的侧面板，请使用以下 URL："

#: ../../locations.md:36
msgid "https://remix.ethereum.org/?#minimizesidepanel=true"
msgstr "https://remix.ethereum.org/?#minimizesidepanel=true"

#: ../../locations.md:38
msgid "To link to Remix with the dark theme or the light theme specified use this url:"
msgstr "要使用指定的暗色主题或亮色主题链接到 Remix，请使用以下网址："

#: ../../locations.md:40
msgid "https://remix.ethereum.org/?#theme=Dark"
msgstr "https://remix.ethereum.org/?#theme=Dark"

#: ../../locations.md:42
msgid "To link to Remix with the Solidity compiler, the unit testing, and LearnEth plugins activated (with Learneth gaining the side panel's focus) & with the Light theme loaded & with the terminal minimized use this URL & with optimize off:"
msgstr "要链接到 Remix，使用 Solidity 编译器、单元测试和激活的 LearnEth 插件（Learneth 获得侧面板的焦点）并加载亮色主题并最小化终端使用此 URL 并关闭优化："

#: ../../locations.md:44
msgid "https://remix.ethereum.org/?#activate=solidity,solidityUnitTesting,LearnEth&theme=Light&minimizeterminal=true&optimize=false&evmVersion=null&version=soljson-v0.6.6+commit.6c089d02.js"
msgstr "https://remix.ethereum.org/?#activate=solidity,solidityUnitTesting,LearnEth&theme=Light&minimizeterminal=true&optimize=false&evmVersion=null&version=soljson-v0.6.6+commit.6c089d02.js"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../plugin_manager.md:1
msgid "Plugin Manager"
msgstr "插件管理器"

#: ../../plugin_manager.md:4
msgid "Everything is a PLUGIN in Remix"
msgstr "一切都是 Remix 中的插件"

#: ../../plugin_manager.md:6
msgid "In order to integrate new tools made by us and by ...you into Remix, we've now made everything a plugin. This architecture will also allow Remix or just parts of Remix to be integrated into other projects (your's for example)."
msgstr "为了将我们和您制作的新工具集成到 Remix 中，我们现在将所有东西都制作成了插件。 这种架构还允许将 Remix 或仅 Remix 的一部分集成到其他项目中(例如您的项目)。"

#: ../../plugin_manager.md:9
msgid "This means that you only load the functionality you need."
msgstr "这意味着您只加载您需要的功能。"

#: ../../plugin_manager.md:11
msgid "It also means that you can turn off and on plugins - as your needs change."
msgstr "这也意味着您可以根据需求的变化关闭和打开插件。"

#: ../../plugin_manager.md:13
msgid "This all happens in the plug manager."
msgstr "这一切都发生在插件管理器中。"

#: ../../plugin_manager.md:15
msgid "The Plugin Manager is also the place you go when you are creating your own plugin and you want to load your local plugin into Remix."
msgstr "当您创建自己的插件并且想要将本地插件加载到 Remix 中时，插件管理器也是您要去的地方。"

#: ../../plugin_manager.md:17
msgid "To load your local plugin, you'd click on the \"Connect to a Local Plugin\" link at the top of the Plugin Manager panel."
msgstr "要加载本地插件，您可以单击插件管理器面板顶部的“连接到本地插件”链接。"

#: ../../plugin_manager.md:21
msgid "To learn more about how to create your own plugin, go to the README of remix-plugin repo."
msgstr "要了解有关如何创建自己的插件的更多信息，请转到 remix-plugin repo 的 README。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../remix_commands.md:1
msgid "Remix Commands"
msgstr "Remix命令"

#: ../../remix_commands.md:4
msgid "In the console, you can run the commands listed below.  Once you start to type a command, there is auto completion.  These commands are using the following libraries:"
msgstr "在控制台中，您可以运行下面列出的命令。 一旦你开始输入命令，就会自动完成。 这些命令使用以下库："

#: ../../remix_commands.md:6
msgid "ethers: The ethers.js library is a compact and complete JavaScript library for Ethereum."
msgstr "ethers：ethers.js 库是一个紧凑且完整的以太坊 JavaScript 库。"

#: ../../remix_commands.md:8
msgid "remix:  Ethereum IDE and tools for the web."
msgstr "remix：以太坊 IDE 和网络工具。"

#: ../../remix_commands.md:10
msgid "web3: The web3.js library is a collection of modules which contain specific functionality for the ethereum ecosystem."
msgstr "web3：web3.js 库是一组包含以太坊生态系统特定功能的模块。"

#: ../../remix_commands.md:12
msgid "swarmgw: This library can be used to upload/download files to Swarm via https://swarm-gateways.net/."
msgstr "swarmgw：该库可用于通过 https://swarm-gateways.net/ 将文件上传/下载到 Swarm。"

#: ../../remix_commands.md:14
msgid "Here's the list of commands"
msgstr "这是命令列表"

#: ../../remix_commands.md:15
msgid "remix.debug(hash): Start debugging a transaction."
msgstr "remix.debug(hash)：开始调试事务。"

#: ../../remix_commands.md:17
msgid "remix.debugHelp(): Display help message for debugging"
msgstr "remix.debugHelp()：显示调试帮助信息"

#: ../../remix_commands.md:19
msgid "remix.execute(filepath): Run the script specified by file path. If filepath is empty, script currently displayed in the editor is executed."
msgstr "remix.execute(filepath)：运行文件路径指定的脚本。 如果文件路径为空，则执行当前显示在编辑器中的脚本。"

#: ../../remix_commands.md:21
msgid "remix.exeCurrent(): Run the script currently displayed in the editor."
msgstr "remix.exeCurrent()：运行编辑器中当前显示的脚本。"

#: ../../remix_commands.md:23
msgid "remix.getFile(path): Returns the content of the file located at the given path"
msgstr "remix.getFile(path)：返回位于给定路径的文件内容"

#: ../../remix_commands.md:25
msgid "remix.help(): Display this help message."
msgstr "remix.help()：显示此帮助信息。"

#: ../../remix_commands.md:27
msgid "remix.loadgist(id): Load a gist in the file explorer."
msgstr "remix.loadgist(id)：在文件资源管理器中加载一个 gist。"

#: ../../remix_commands.md:29
msgid "remix.loadurl(url): Load the given url in the file explorer. The url can be of type github, swarm or ipfs."
msgstr "remix.loadurl(url)：在文件资源管理器中加载给定的 url。 url 可以是 github、swarm 或 ipfs 类型。"

#: ../../remix_commands.md:31
msgid "remix.setFile(path, content): set the content of the file located at the given path"
msgstr "remix.setFile(path, content)：设置位于给定路径的文件内容"

#: ../../remix_commands.md:33
msgid "remix.setproviderurl(url): Change the current provider to Web3 provider and set the url endpoint."
msgstr "remix.setproviderurl(url)：将当前提供者更改为 Web3 提供者并设置 url 端点。"

#: ../../remix_commands.md:35
msgid "swarmgw.get(url, cb): Download files from Swarm via https**://swarm-gateways.net/"
msgstr "swarmgw.get(url, cb): 通过 https**://swarm-gateways.net/ 从 Swarm 下载文件"

#: ../../remix_commands.md:37
msgid "swarmgw.put(content, cb): Upload files to Swarm via https**://swarm-gateways.net/"
msgstr "swarmgw.put(content, cb): 通过 https**://swarm-gateways.net/ 上传文件到 Swarm"

#: ../../remix_commands.md:39
msgid "ethers.Contract: This API provides a graceful connection to a contract deployed on the blockchain, simplifying calling and querying its functions and handling all the binary protocol and conversion as necessarily."
msgstr "ethers.Contract：此 API 提供与部署在区块链上的合约的优雅连接，简化调用和查询其功能，并根据需要处理所有二进制协议和转换。"

#: ../../remix_commands.md:41
msgid "ethers.HDNode: A Hierarchical Deterministic Wallet represents a large tree of private keys which can reliably be reproduced from an initial seed."
msgstr "ethers.HDNode：分层确定性钱包代表一棵大树的私钥，可以从初始种子可靠地复制。"

#: ../../remix_commands.md:43
msgid "ethers.Interface: The Interface Object is a meta-class that accepts a Solidity (or compatible) Application Binary Interface (ABI) and populates functions to deal with encoding and decoding the parameters to pass in and results returned."
msgstr "ethers.Interface：接口对象是一个元类，它接受一个 Solidity(或兼容的)应用程序二进制接口(ABI)并填充函数来处理编码和解码要传入的参数和返回的结果。"

#: ../../remix_commands.md:45
msgid "ethers.providers: A Provider abstracts a connection to the Ethereum blockchain, for issuing queries and sending state changing transactions."
msgstr "ethers.providers：提供商抽象出于以太坊区块链的连接，用于发出查询和发送状态变化的交易。"

#: ../../remix_commands.md:47
msgid "ethers.SigningKey: The SigningKey interface provides an abstraction around the secp256k1 elliptic curve cryptography library."
msgstr "ethers.SigningKey：SigningKey 接口提供了围绕 secp256k1 椭圆曲线密码库的抽象。"

#: ../../remix_commands.md:49
msgid "ethers.utils: The utility functions exposed in both the ethers umbrella package and the ethers-utils."
msgstr "ethers.utils：ethers 伞包和 ethers-utils 中公开的实用程序函数。"

#: ../../remix_commands.md:51
msgid "ethers.utils.AbiCoder: Create a new ABI Coder object"
msgstr "ethers.utils.AbiCoder：创建一个新的 ABI Coder 对象"

#: ../../remix_commands.md:53
msgid "ethers.utils.RLP: This encoding method is used internally for several aspects of Ethereum, such as encoding transactions and determining contract addresses."
msgstr "ethers.utils.RLP：这种编码方法在内部用于以太坊的几个方面，例如编码交易和确定合约地址。"

#: ../../remix_commands.md:55
msgid "ethers.Wallet: A wallet manages a private/public key pair which is used to cryptographically sign transactions and prove ownership on the Ethereum network."
msgstr "ethers.Wallet：钱包管理私钥/公钥对，用于对交易进行加密签名并证明以太坊网络的所有权。"

#: ../../remix_commands.md:57
msgid "ethers.version: Contains the version of the ethers container object."
msgstr "ethers.version：包含Eth容器对象的版本。"

#: ../../remix_commands.md:59
msgid "web3.bzz: Bzz module for interacting with the swarm network."
msgstr "web3.bzz：用于与 swarm 网络交互的 Bzz 模块。"

#: ../../remix_commands.md:61
msgid "web3.eth: Eth module for interacting with the Ethereum network."
msgstr "web3.eth：用于与以太坊网络交互的 Eth 模块。"

#: ../../remix_commands.md:63
msgid "web3.eth.accounts: The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data."
msgstr "web3.eth.accounts：web3.eth.accounts 包含生成以太坊账户以及签署交易和数据的功能。"

#: ../../remix_commands.md:65
msgid "web3.eth.abi: The web3.eth.abi functions let you de- and encode parameters to ABI (Application Binary Interface) for function calls to the EVM (Ethereum Virtual Machine)."
msgstr "web3.eth.abi：web3.eth.abi 函数让您可以将参数解译和编码为 ABI(应用程序二进制接口)，以便对 EVM(以太坊虚拟机)进行函数调用。"

#: ../../remix_commands.md:67
msgid "web3.eth.ens: The web3.eth.ens functions let you interacting with ENS."
msgstr "web3.eth.ens：web3.eth.ens 函数让你与 ENS 交互"

#: ../../remix_commands.md:69
msgid "web3.eth.Iban: The web3.eth.Iban function lets convert Ethereum addresses from and to IBAN and BBAN."
msgstr "web3.eth.Iban：web3.eth.Iban 函数允许将以太坊地址从 IBAN 和 BBAN 转换为 IBAN 和 BBAN。"

#: ../../remix_commands.md:71
msgid "web3.eth.net: Net module for interacting with network properties."
msgstr "web3.eth.net：用于与网络属性交互的网络模块。"

#: ../../remix_commands.md:73
msgid "web3.eth.personal: Personal module for interacting with the Ethereum accounts."
msgstr "web3.eth.personal：用于与以太坊账户交互的个人模块。"

#: ../../remix_commands.md:75
msgid "web3.eth.subscribe: The web3.eth.subscribe function lets you subscribe to specific events in the blockchain."
msgstr "web3.eth.subscribe：web3.eth.subscribe 功能让您可以订阅区块链中的特定事件。"

#: ../../remix_commands.md:77
msgid "web3.givenProvider: When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser. Will return the given provider by the (browser) environment, otherwise null."
msgstr "web3.givenProvider：在以太坊兼容的浏览器中使用 web3.js 时，它将由该浏览器设置为当前的本地提供程序。 将由(浏览器)环境返回给定的提供者，否则为空。"

#: ../../remix_commands.md:79
msgid "web3.modules: Contains the version of the web3 container object."
msgstr "web3.modules：包含 web3 容器对象的版本。"

#: ../../remix_commands.md:81
msgid "web3.providers: Contains the current available providers."
msgstr "web3.providers：包含当前可用的供应商。"

#: ../../remix_commands.md:83
msgid "web3.shh: Shh module for interacting with the whisper protocol"
msgstr "web3.shh：用于与 Whisper 协议交互的 Shh 模块"

#: ../../remix_commands.md:85
msgid "web3.utils: This package provides utility functions for Ethereum dapps and other **web3.js packages."
msgstr "web3.utils：该包为以太坊 dapps 和其他 **web3.js 包提供实用功能。"

#: ../../remix_commands.md:87
msgid "web3.version: Contains the version of the web3 container object."
msgstr "web3.version：包含 web3 容器对象的版本。"

#: ../../remix_commands.md:89
msgid "web3.eth.clearSubscriptions();: Resets subscriptions."
msgstr "web3.eth.clearSubscriptions();：重置订阅。"

#: ../../remix_commands.md:91
msgid "web3.eth.Contract(jsonInterface[, address][, options]): The **web3.eth.Contract object makes it easy to interact with smart contracts on the ethereum blockchain."
msgstr "web3.eth.Contract(jsonInterface[, address][, options])：**web3.eth.Contract 对象可以轻松地与以太坊区块链上的智能合约进行交互。"

#: ../../remix_commands.md:93
msgid "web3.eth.accounts.create([entropy]);: The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data."
msgstr "web3.eth.accounts.create([entropy]);：web3.eth.accounts 包含生成以太坊账户和签署交易和数据的功能。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../remixd.md:1
msgid "Remixd: Access your Local Filesystem"
msgstr "Remixd：访问您的本地文件系统"

#: ../../remixd.md:3
msgid "To give the Remix-ide (the web app) access to a folder on your local computer, you need to use remixd."
msgstr "要让 Remix-ide(网络应用程序) 访问本地计算机上的文件夹，您需要使用 remixd。"

#: ../../remixd.md:5
msgid "remixd is both the name of an npm module and the name of a Remix-plugin.  You need to install the plugin (from the plugin manager) and you need to install the remixd npm module."
msgstr "remixd 既是 npm 模块的名称，也是 Remix-plugin 的名称。 您需要安装插件(从插件管理器)，并且需要安装 remixd npm 模块。"

#: ../../remixd.md:8
msgid "NOTE: you need to install the remixd npm module & Run its command before activating the remixd plugin."
msgstr "注意：在激活 remixd 插件之前，您需要安装 remixd npm 模块并运行它的命令。"

#: ../../remixd.md:10
msgid "The code of remixd is here ."
msgstr "Remixd 的代码在这里。"

#: ../../remixd.md:13
msgid "remixd Installation"
msgstr "remixd安装"

#: ../../remixd.md:14
msgid "remixd can be globally installed using the following command: npm install -g remixd"
msgstr "remixd 可以使用以下命令全局安装： npm install -g remixd"

#: ../../remixd.md:17
msgid "Or just install it in the directory of your choice by removing the -g flag: npm install remixd"
msgstr "或者通过删除 -g 标志将其安装在您选择的目录中： npm install remixd"

#: ../../remixd.md:20
msgid "remixd Command"
msgstr "remixd命令"

#: ../../remixd.md:21
msgid "From the terminal, the command remixd -s <absolute-path-to-the-shared-folder> --remix-ide <your-remix-ide-URL-instance> will start remixd and will share the given folder with remix-ide."
msgstr "从终端，命令 remixd -s <absolute-path-to-the-shared-folder> --remix-ide <your-remix-ide-URL-instance> 将启动 remixd 并将与 remix-ide 共享给定文件夹。"

#: ../../remixd.md:23
msgid "For example, to use remixd with Remix IDE, use this command: remixd -s <absolute-path-to-the-shared-folder> --remix-ide https://remix.ethereum.org"
msgstr "例如，要将 remixd 与 Remix IDE 一起使用，请使用以下命令：remixd -s <absolute-path-to-the-shared-folder> --remix-ide https://remix.ethereum.org"

#: ../../remixd.md:26
msgid "Make sure that if you use https://remix.ethereum.org (secure http) in the remixd command (like in the example above), that you are also pointing your browser to https://remix.ethereum.org and not to http://remix.ethereum.org (plain old insecure http).  Or if you want to use http in the browser use http in the remixd command."
msgstr "确保如果您在 remixd 命令中使用 https://remix.ethereum.org (安全 http) (如上面的示例)，您也将浏览器指向 https://remix.ethereum.org 而不是 到 http://remix.ethereum.org(普通旧的不安全的 http)。 或者，如果您想在浏览器中使用 http，请在 remixd 命令中使用 http。"

#: ../../remixd.md:28
msgid "The folder is shared using a websocket connection between Remix IDE and remixd."
msgstr "该文件夹使用 Remix IDE 和 remixd 之间的 websocket 连接共享。"

#: ../../remixd.md:31
msgid "Be sure the user executing remixd has read/write permission on the folder."
msgstr "确保执行 remixd 的用户对该文件夹具有读/写权限。"

#: ../../remixd.md:34
msgid "There is an option to run remixd in read-only mode, use --read-only flag."
msgstr "有一个选项可以在只读模式下运行 remixd，使用 --read-only 标志。"

#: ../../remixd.md:36
msgid "Warning!"
msgstr "警告！"

#: ../../remixd.md:37
msgid "remixd provides full read and write access to the given folder for any application that can access the TCP port 65520 on your local host."
msgstr "remixd 为可以访问本地主机上的 TCP 端口 65520 的任何应用程序提供对给定文件夹的完全读写访问权限。"

#: ../../remixd.md:40
msgid "After the command is running, activate the remixd plugin."
msgstr "命令运行后，激活 remixd 插件。"

#: ../../remixd.md:41
msgid "From Remix IDE, in the Plugin Manager, activate the remixd plugin.  This plugin is a websocket plugin and it has no UI other than a modal dialog box."
msgstr "在 Remix IDE 的插件管理器中，激活 remixd 插件。 这个插件是一个 websocket 插件，除了一个模态对话框，它没有 UI。"

#: ../../remixd.md:43
msgid "This modal will ask confirmation"
msgstr "此模式将要求确认"

#: ../../remixd.md:45
msgid "Accepting this dialog will start a session."
msgstr "接受此对话框将启动会话。"

#: ../../remixd.md:47
msgid "If you do not have remixd running in the background - another modal will open up and it will say:"
msgstr "如果您没有在后台运行 remixd background - another 模式将打开，它会说："

#: ../../remixd.md:54
msgid "Assuming you don't get the 2nd modal, your connection to the remixd daemon is successful. The shared folder will be available in the file explorer."
msgstr "假设您没有获得第二个模式，您与 remixd 守护程序的连接是成功的。 共享文件夹将在文件资源管理器中可用。"

#: ../../remixd.md:56
msgid "When you click the activation of remixd is successful - there will NOT be an icon that loads in the icon panel."
msgstr "当您单击 remixd 激活成功时 - 图标面板中不会加载图标。"

#: ../../remixd.md:58
msgid "Click the File Explorers icon and in the swap panel you should now see the folder for localhost."
msgstr "单击文件资源管理器图标，在交换面板中，您现在应该看到 localhost 的文件夹。"

#: ../../remixd.md:60
msgid "Click on the localhost connection icon:"
msgstr "单击本地主机连接图标："

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../remix_tutorials_github.md:1
msgid "Remix Github Tutorials"
msgstr "Remix Github 教程"

#: ../../remix_tutorials_github.md:4
msgid "There are a series of tutorials in our github repo remix-workshops."
msgstr "我们的 github 库 remix-workshops 中有一系列教程。"

#: ../../remix_tutorials_github.md:6
msgid "We are in the process of upgrading these tutorials to use the new Remix layout."
msgstr "我们正在升级这些教程以使用新的 Remix 布局。"

#: ../../remix_tutorials_github.md:8
msgid "In this repo there tutorials for all levels."
msgstr "在这个 repo 中有所有级别的教程。"

#: ../../remix_tutorials_github.md:10
msgid "There are tutorials for specific remix functionalities like:"
msgstr "有针对特定Remix功能的教程，例如："

#: ../../remix_tutorials_github.md:12
msgid "Deploying"
msgstr "部署"

#: ../../remix_tutorials_github.md:18
msgid "Testing"
msgstr "测试"

#: ../../remix_tutorials_github.md:23
msgid "Remix Plugin Development"
msgstr "Remix插件开发"

#: ../../remix_tutorials_github.md:27
msgid "Other"
msgstr "其它"

#: ../../remix_tutorials_github.md:35
msgid "Additional external workshops"
msgstr "其他外部研讨会"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../run.md:1
msgid "Deploy & Run"
msgstr "部署和运行"

#: ../../run.md:4
msgid "The Deploy & Run module allows you to send transactions to the current environment."
msgstr "Deploy & Run 模块允许您将事务发送到当前环境。"

#: ../../run.md:6
msgid "To use this module, you need to have a contract compiled.  So, if there is a contract name in the <b>CONTRACT</b> select box (the select box is under the VALUE input field), you can use this module.  If nothing is there or you do not see the contract you want, you need to select a contract in the editor to make it active, go to a compiler module and compile it, and then come back to Deploy & Run."
msgstr "要使用这个模块，你需要编译一个合约。 因此，如果 <b>CONTRACT</b> 选择框(选择框在 VALUE 输入字段下方) 中有合约名称，则可以使用该模块。 如果什么都没有或者你没有看到你想要的合约，你需要在编辑器中选择一个合约来激活它，去一个编译器模块并编译它，然后再回到部署和运行。"

#: ../../run.md:10
msgid "Environment"
msgstr "环境"

#: ../../run.md:13
msgid "JavaScript VM: All the transactions will be executed in a sandbox blockchain in the browser. This means nothing will be persisted when you reload the page. The JsVM is its own blockchain and on each reload it will start a new blockchain, the old one will not be saved."
msgstr "JavaScript VM：所有交易都将在浏览器的沙箱区块链中执行。 这意味着重新加载页面时不会保留任何内容。 JsVM 是它自己的区块链，每次重新加载时都会启动一个新的区块链，旧的不会被保存。"

#: ../../run.md:17
msgid "Injected Provider: Remix will connect to an injected web3 provider. Metamask is an example of a provider that inject web3."
msgstr "Injected Provider：Remix 将连接到Injected的 web3 provider。 Metamask 是Injected web3 的提供程序的一个示例。"

#: ../../run.md:20
msgid "Web3 Provider: Remix will connect to a remote node. You will need to provide the URL to the selected provider: geth, parity or any Ethereum client."
msgstr "Web3 Provider：Remix 将连接到远程节点。 您需要提供所选提供商的 URL：geth、parity 或任何以太坊客户端。"

#: ../../run.md:22
msgid "More about Web3 Provider"
msgstr "关于更多 Web3 Provider"

#: ../../run.md:24
msgid "If you are using Geth & https://remix.ethereum.org, please use the following Geth command to allow requests from Remix:"
msgstr "如果您使用 Geth 和 https://remix.ethereum.org，请使用以下 Geth 命令来允许来自 Remix 的请求："

#: ../../run.md:26
msgid "geth --rpc --rpccorsdomain https://remix.ethereum.org"
msgstr "geth --rpc --rpccorsdomain https://remix.ethereum.org"

#: ../../run.md:28
msgid "Also see Geth Docs about the rpc server"
msgstr "另请参阅有关 rpc 服务器的 Geth Docs"

#: ../../run.md:30
msgid "To run Remix using  https://remix.ethereum.org & a local test node, use this Geth command:"
msgstr "要使用 https://remix.ethereum.org 和本地测试节点运行 Remix，请使用以下 Geth 命令："

#: ../../run.md:32
msgid "geth --rpc --rpccorsdomain=\"https://remix.ethereum.org\" --rpcapi web3,eth,debug,personal,net --vmdebug --datadir <path/to/local/folder/for/test/chain> --dev console"
msgstr "geth --rpc --rpccorsdomain=\"https://remix.ethereum.org\" --rpcapi web3,eth,debug,personal,net --vmdebug --datadir <path/to/local/folder/for/test/chain> --dev console"

#: ../../run.md:34
msgid "If you are using remix-alpha or a local version of remix - replace the url of the --rpccorsdomain with the url of Remix that you are using."
msgstr "如果您使用的是 remix-alpha 或本地版本的 remix - 将 --rpccorsdomain 的 url 替换为您正在使用的 Remix 的 url。"

#: ../../run.md:36
msgid "To run Remix Desktop & a local test node, use this Geth command:"
msgstr "要运行 Remix Desktop 和本地测试节点，请使用以下 Geth 命令："

#: ../../run.md:38
msgid "geth --rpc --rpccorsdomain=\"package://a7df6d3c223593f3550b35e90d7b0b1f.mod\" --rpcapi web3,eth,debug,personal,net --vmdebug --datadir <path/to/local/folder/for/test/chain> --dev console"
msgstr "geth --rpc --rpccorsdomain=\"package://a7df6d3c223593f3550b35e90d7b0b1f.mod\" --rpcapi web3,eth,debug,personal,net --vmdebug --datadir <path/to/local/folder/for/test/chain> --dev console"

#: ../../run.md:40
msgid "Also see Geth Docs on Dev mode"
msgstr "另请参阅 Dev 模式的 Geth 文档"

#: ../../run.md:42
msgid "The Web3 Provider Endpoint for a local node is http://localhost:8545"
msgstr "本地节点的 Web3 Provider Endpoint 是 http://localhost:8545"

#: ../../run.md:46
msgid "WARNING: Don't get lazy. It is a bad idea to use the Geth flag <b>--rpccorsdomain</b> with a wildcard: --rpccorsdomain *"
msgstr "警告：不要偷懒。 将 Geth 标志 <b>--rpccorsdomain</b> 与通配符一起使用是个坏主意：--rpccorsdomain *"

#: ../../run.md:48
msgid "If you put the wildcard *, it means everyone can request the node. Whereas, if you put a URL, it restricts the urls to just that one - e.g.  --rpccorsdomain 'https://remix-alpha.ethereum.org'"
msgstr "如果放通配符*，则表示每个人都可以请求该节点。 然而，如果你放置一个 URL，它会将 URL 限制在那个 URL 上——例如 --rpccorsdomain 'https://remix-alpha.ethereum.org'"

#: ../../run.md:50
msgid "Only use --rpccorsdomain * when using a test chain AND using only test accounts. For real accounts or on the mainchain specify the url."
msgstr "仅在使用测试链且仅使用测试帐户时使用 --rpccorsdomain *。 对于真实账户或在主链上指定 url。"

#: ../../run.md:55
msgid "Account:"
msgstr "账户："

#: ../../run.md:57
msgid "Account: the list of accounts associated with the current environment (and their associated balances).  On the JsVM, you have a choice of 5 accounts.  If using Injected Web3 with MetaMask, you need to change the account in MetaMask."
msgstr "账户：与当前环境关联的账户列表(及其关联的余额)。 在 JsVM 上，您可以选择 5 个账户。 如果将 Injected Web3 与 MetaMask 一起使用，则需要更改 MetaMask 中的账户。"

#: ../../run.md:60
msgid "Gas Limit:"
msgstr "Gas限制："

#: ../../run.md:62
msgid "This sets the maximum amount of gas that will be allowed for all the transactions created in Remix."
msgstr "这设置了在 Remix 中创建的所有交易允许的最大gas量。"

#: ../../run.md:65
msgid "Value:"
msgstr "值："

#: ../../run.md:67
msgid "This sets the amount of ETH, WEI, GWEI etc that is sent to a contract or a payable function.  ( Note: payable functions have a red button). The value is always reset to 0 after each transaction execution). The Value field is NOT for gas."
msgstr "这设置了发送到合约或应付函数的 ETH、WEI、GWEI 等数量。(注：应付功能有一个红色按钮)。 每次事务执行后，该值始终重置为 0)。 值字段不适用于gas。"

#: ../../run.md:71
msgid "Initiate Instance"
msgstr "启动实例"

#: ../../run.md:74
msgid "In the image above, the select box is set to Ballot.  This select box will contain the list of compiled contracts."
msgstr "在上图中，选择框设置为 Ballot。 此选择框将包含已编译合约的列表。"

#: ../../run.md:76
msgid "Deploy send a transaction that deploys the selected contract. When the transaction is mined, the newly created instance will be added (this might take several seconds). Note that if the constructor has parameters, you need to specify them."
msgstr "部署发送部署所选合约的事务。 当交易被挖掘时，新创建的实例将被添加(这也许需要几秒钟)。 请注意，如果构造函数有参数，则需要指定它们。"

#: ../../run.md:81
msgid "At Address this is used at access a contract that has already been deployed. It assumes that the given address is an instance of the selected contract.  Note: There's no check at this point, so be careful when using this feature, and be sure you trust the contract at that address."
msgstr "在 Address 这用于访问已经部署的合约。 它假设给定的地址是所选合约的一个实例。 注意：此时没有检查，因此在使用此功能时要小心，并确保您信任该地址的合约。"

#: ../../run.md:84
msgid "Pending Instances"
msgstr "待处理的实例"

#: ../../run.md:87
msgid "Validating a transaction takes several seconds. During this time, the GUI shows it in a pending mode. When the transaction is mined, the number of pending transactions is updated and the transaction is added to the log (see terminal)."
msgstr "验证交易需要几秒钟。 在此期间，GUI 将其显示为挂起模式。 当交易被挖掘时，挂起交易的数量被更新并且交易被添加到日志中(见终端)。"

#: ../../run.md:92
msgid "Using the ABI"
msgstr "使用 ABI"

#: ../../run.md:95
msgid "Using Deploy or At Address is a classic use case of Remix. However, it is possible to interact with a contract by using its ABI. The ABI is a JSON array which describe its interface."
msgstr "使用 Deploy 或 At Address 是 Remix 的一个经典用例。 但是，可以使用合约的 ABI 与合约进行交互。 ABI 是一个描述其接口的 JSON 数组。"

#: ../../run.md:99
msgid "To interact with a contract using the ABI, create a new file in Remix with extension *.abi and copy the ABI content to it. Then, in the input next to At Address, put the Address of the contract you want to interact with. Click on At Address, a new \"connection\" with the contract will popup below."
msgstr "要使用 ABI 与合约交互，请在 Remix 中创建一个扩展名为 *.abi 的新文件，并将 ABI 内容复制到其中。 然后，在 At Address 旁边的输入中，输入您要与之交互的合约的地址。 点击地址，下面会弹出一个与合约的新“连接”。"

#: ../../run.md:105
msgid "Using the Recorder"
msgstr "使用记录器"

#: ../../run.md:108
msgid "The Recorder is a tool used to save a bunch of transactions in a JSON file and rerun them later either in the same environment or in another."
msgstr "Recorder 是一种工具，用于将一堆事务保存在 JSON 文件中，然后在同一环境或另一个环境中重新运行它们。"

#: ../../run.md:111
msgid "Saving to the JSON file ( by default its called scenario.json) allows one to easily check the transaction list, tweak input parameters, change linked library, etc..."
msgstr "保存到 JSON 文件(默认情况下，它称为scenario.json)允许人们轻松检查事务列表、调整输入参数、更改链接库等......"

#: ../../run.md:113
msgid "There are many use cases for the recorder."
msgstr "记录器有很多用例。"

#: ../../run.md:115
msgid "For instance:"
msgstr "例如："

#: ../../run.md:117
msgid "After having coded and tested contracts in a constrained environment (like the JavaScript VM), you could then change the environment and redeploy it to a more realistic environment like a test net with an injected web3 or to a Geth node. By using the generated scenario.json file, you will be using all the same settings that you used in the Javascript VM.  And this mean that you won't need to click the interface 100 times or whatever to get the state that you achieved originally.  So the recorder could be a tool to protect your sanity."
msgstr "在受限环境(如 JavaScript VM)中对合约进行编码和测试后，您可以更改环境并将其重新部署到更现实的环境中，例如注入 web3 的测试网或 Geth 节点。 通过使用生成的scenario.json 文件，您将使用在Javascript VM 中使用的所有相同设置。 这意味着您无需单击界面 100 次或其他任何操作即可获得最初达到的状态。 所以记录器可以成为保护你理智的工具。"

#: ../../run.md:120
msgid "You can also change the settings in the scenario.json file to customize the playback."
msgstr "您还可以更改scenario.json 文件中的设置来自定义播放。"

#: ../../run.md:122
msgid "Deploying contract does often require more than creating one transaction and so the recorder will automate this deployment."
msgstr "部署合约通常需要的不仅仅是创建一个事务，因此记录器将自动执行此部署。"

#: ../../run.md:125
msgid "Working in a dev environment often requires to setup the state in a first place."
msgstr "在开发环境中工作通常需要首先设置状态。"

#: ../../run.md:130
msgid "scenario.json"
msgstr "scenario.json"

#: ../../run.md:131
msgid "To create this file in the recorder, you first of course need to have run some transactions.  In the image above - it has a 0 next to Transactions Recorded.  So this isn't the right moment to save transactions because - well because there aren't any.  Each time you make a transaction, that number will increment.  Then when you are ready, click the floppy disk icon and the scenario.json file will be created."
msgstr "要在记录器中创建此文件，您首先当然需要运行一些事务。 在上图中 - 记录的交易旁边有一个 0。 所以现在不是保存交易的正确时机，因为——好吧，因为没有交易。 每次您进行交易时，该数字都会增加。 然后当你准备好时，点击软盘图标，就会创建scenario.json文件。"

#: ../../run.md:133
msgid "The JSON file below is an example of the scenario.json file."
msgstr "下面的 JSON 文件是 scenario.json 文件的一个示例。"

#: ../../run.md:135
msgid "In it, 3 transactions are executed:"
msgstr "在其中，执行了 3 个事务："

#: ../../run.md:137
msgid "The first corresponds to the deployment of the lib testLib."
msgstr "第一个对应lib testLib的部署。"

#: ../../run.md:139
msgid "The second corresponds to the deployment of the contract test with the first parameter of the constructor set to 11. That contract depends on a library. The linkage is done using the property linkReferences. In that case we use the address of the previously created library : created{1512830014773}. The number is the id (timestamp) of the transaction that led to the creation of the library."
msgstr "第二个对应于合约测试的部署，构造函数的第一个参数设置为 11。该合约依赖于一个库。 链接是使用属性 linkReferences 完成的。 在这种情况下，我们使用之前创建的库的地址：created{1512830014773}。 该数字是导致创建库的事务的 Id(时间戳)。"

#: ../../run.md:146
msgid "The third record corresponds to the call to the function set of the contract test (the property to is set to: created{1512830015080}) . Input parameters are 1 and 0xca35b7d915458ef540ade6068dfe2f44e8fa733c"
msgstr "第三条记录对应合约测试的函数集的调用(属性to设置为：created{1512830015080})。 输入参数为 1 和 0xca35b7d915458ef540ade6068dfe2f44e8fa733c"

#: ../../run.md:151
msgid "All these transactions are created using the value of the accounts account{0}."
msgstr "所有这些交易都是使用账户 account{0} 的值创建的。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../settings.md:1
msgid "Settings"
msgstr "设置"

#: ../../settings.md:4
msgid "To get to Settings click the gear a the very bottom of the icon panel."
msgstr "要进入设置，请单击图标面板最底部的齿轮。"

#: ../../settings.md:6
msgid "You can find a link to the homepage (if you closed it) as well as a link to our Gitter Channel and for you aesthetes out there, we now have a rather large list of themes."
msgstr "您可以找到指向主页的链接(如果您关闭了它) 以及指向我们的 Gitter 频道的链接，对于那些在那里的美学家来讲，我们现在有一个相当大的主题列表。"

#: ../../settings.md:10
msgid "Another important settings:"
msgstr "另一个重要设置："

#: ../../settings.md:12
msgid "Text wrap: controls if the text in the editor should be wrapped."
msgstr "文本换行：控制编辑器中的文本是否应换行。"

#: ../../settings.md:14
msgid "Enable optimization: defines if the compiler should enable optimization during compilation. Enabling this option saves execution gas. It is useful to enable optimization for contracts ready to be deployed in production but could lead to some inconsistencies when debugging such a contract."
msgstr "启用优化：定义编译器是否应在编译期间启用优化。 启用此选项可节省执行gas。 为准备在生产中部署的合约启用优化很有用，但在调试此类合约时可能会导致一些不一致。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../solidity_editor.md:1
msgid "Solidity Editor"
msgstr "Solidity 编译器"

#: ../../solidity_editor.md:4
msgid "The Remix editor recompiles the code each time the current file is changed or another file is selected. It also provides syntax highlighting mapped to solidity keywords."
msgstr "每次更改当前文件或选择另一个文件时，Remix 编辑器都会重新编译代码。 它还提供映射到可靠关键字的语法突出显示。"

#: ../../solidity_editor.md:10
msgid "Here's the list of some important features:"
msgstr "以下是一些重要功能的列表："

#: ../../solidity_editor.md:12
msgid "It display opened files as tabs."
msgstr "它将打开的文件显示为选项卡。"

#: ../../solidity_editor.md:13
msgid "Compilation Warning and Error are displayed in the gutter"
msgstr "编译警告和错误显示在装订线中"

#: ../../solidity_editor.md:14
msgid "Remix saves the current file continuously (5s after the last changes)"
msgstr "Remix 连续保存当前文件(最后一次更改后 5 秒)"

#: ../../solidity_editor.md:16
msgid "+/- on the top left corner enable you to increase/decrease the font size of the editor"
msgstr "左上角的 +/- 使您可以增加/减少编辑器的字体大小"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../static_analysis.md:1
msgid "Solidity Static Analysis"
msgstr "Solidity 静态分析"

#: ../../static_analysis.md:4
msgid "Static code analysis is a process to debug the code by examining it and without actually executing the code."
msgstr "静态代码分析是通过检查代码而不实际执行代码来调试代码的过程。"

#: ../../static_analysis.md:6
msgid "Solidity Static Analysis plugin performs static analysis on Solidity smart contracts once they are compiled. It checks for security vulnerabilities and bad development practices, among other issues. This plugin comes with Solidity environment of Remix IDE. It can also be activated individually from Plugin Manager."
msgstr "Solidity 静态分析插件在编译后对 Solidity 智能合约进行静态分析。 它检查安全漏洞和不良开发实践等问题。 这个插件带有 Remix IDE 的 Solidity 环境。 它也可以从插件管理器单独激活。"

#: ../../static_analysis.md:8
msgid "How to use"
msgstr "如何使用"

#: ../../static_analysis.md:11
msgid "If you select this plugin, you will see a number of modules listed along with checkboxes, one Auto run checkbox and a Run button."
msgstr "如果您选择此插件，您将看到许多模块与复选框、一个自动运行复选框和一个运行按钮一起列出。"

#: ../../static_analysis.md:15
msgid "By default, all modules are selected for analysis and a new analysis is performed at each compilation."
msgstr "默认情况下，选择所有模块进行分析，并在每次编译时执行新的分析。"

#: ../../static_analysis.md:17
msgid "One can select/deselect the modules under which contract should be analyzed and can run the analysis again for last compiled contract by clicking on Run."
msgstr "可以 选择/取消 选择应分析合约的模块，并可以通过单击“运行”再次为上次编译的合约运行分析。"

#: ../../static_analysis.md:19
msgid "If you don't want to run analysis each time you compile a contract, just uncheck the checkbox near to Auto run."
msgstr "如果您不想在每次编译合约时都运行分析，只需取消选中 Auto run 附近的复选框即可。"

#: ../../static_analysis.md:21
msgid "Analysis Modules"
msgstr "分析模块"

#: ../../static_analysis.md:23
msgid "Currently, with Remix IDE v0.10.1, there are 21 analysis modules listed under 4 categories. Categories are: Security, Gas & Economy, ERC & Miscellaneous."
msgstr "目前，在 Remix IDE v0.10.1 中，共有 21 个分析模块列在 4 个类别下。 类别包括：安全、gas和经济、ERC 和其它。"

#: ../../static_analysis.md:25
msgid "Here is the list of modules under each category along with the example code which should be avoided or used very carefully while development:"
msgstr "以下是每个类别下的模块列表以及在开发时应避免或非常小心使用的示例代码："

#: ../../static_analysis.md:27
msgid "Category: Security"
msgstr "类别：安全"

#: ../../static_analysis.md:28
msgid "Transaction origin: 'tx.origin' is used"
msgstr "交易来源：使用“tx.origin”"

#: ../../static_analysis.md:30
msgid "tx.origin is useful only in very exceptional cases. If you use it for authentication, you usually want to replace it by \"msg.sender\", because otherwise any contract you call can act on your behalf."
msgstr "tx.origin 仅在非常特殊的情况下才有用。 如果您使用它进行身份验证，您通常希望将其替换为“msg.sender”，因为否则您调用的任何合约都可以代表您行事。"

#: ../../static_analysis.md:32
#: ../../static_analysis.md:41
#: ../../static_analysis.md:54
#: ../../static_analysis.md:65
#: ../../static_analysis.md:78
#: ../../static_analysis.md:87
#: ../../static_analysis.md:95
#: ../../static_analysis.md:105
#: ../../static_analysis.md:119
#: ../../static_analysis.md:136
#: ../../static_analysis.md:150
#: ../../static_analysis.md:168
#: ../../static_analysis.md:194
#: ../../static_analysis.md:207
#: ../../static_analysis.md:217
#: ../../static_analysis.md:229
#: ../../static_analysis.md:239
#: ../../static_analysis.md:247
#: ../../static_analysis.md:257
#: ../../static_analysis.md:269
#: ../../static_analysis.md:284
msgid "Example:"
msgstr "示例："

#: ../../static_analysis.md:37
msgid "Check effects: Potential reentrancy bugs"
msgstr "Check effects：潜在的重入错误"

#: ../../static_analysis.md:39
msgid "Potential Violation of Checks-Effects-Interaction pattern can lead to re-entrancy vulnerability."
msgstr "Checks-Effects-Interaction 模式的潜在违反可能导致重入漏洞。"

#: ../../static_analysis.md:50
msgid "Inline assembly: Inline assembly used"
msgstr "Inline assembly：使用内联汇编"

#: ../../static_analysis.md:52
msgid "Use of inline assembly is advised only in rare cases."
msgstr "仅在极少数情况下建议使用内联汇编。"

#: ../../static_analysis.md:61
msgid "Block timestamp: Semantics maybe unclear"
msgstr "Block timestamp：语义可能不清楚"

#: ../../static_analysis.md:63
msgid "now does not mean current time. now is an alias for block.timestamp. block.timestamp can be influenced by miners to a certain degree, be careful."
msgstr "现在并不意味着当前时间。 now 是 block.timestamp 的别名。 block.timestamp 会在一定程度上受到矿工的影响，请小心。"

#: ../../static_analysis.md:74
msgid "Low level calls: Semantics maybe unclear"
msgstr "Low level calls：语义可能不清楚"

#: ../../static_analysis.md:76
msgid "Use of low level call, callcode or delegatecall should be avoided whenever possible. send does not throw an exception when not successful, make sure you deal with the failure case accordingly. Use transfer whenever failure of the ether transfer should rollback the whole transaction."
msgstr "应尽可能避免使用低级调用、调用代码或委托调用。 send 不成功时不会抛出异常，请确保您相应地处理失败情况。 每当以太传输失败应回滚整个交易时，请使用传输。"

#: ../../static_analysis.md:83
msgid "Blockhash usage: Semantics maybe unclear"
msgstr "Blockhash usage：语义可能不清楚"

#: ../../static_analysis.md:85
msgid "blockhash is used to access the last 256 block hashes. A miner computes the block hash by \"summing up\" the information in the current block mined. By summing up the information in a clever way a miner can try to influence the outcome of a transaction in the current block."
msgstr "blockhash 用于访问最后 256 个块哈希。 矿工通过“summing up”当前开采的区块中的信息来计算区块哈希。 通过巧妙地总结信息，矿工可以尝试影响当前区块中交易的结果。"

#: ../../static_analysis.md:91
msgid "Selfdestruct: Beware of caller contracts"
msgstr "Selfdestruct：当心调用者合约"

#: ../../static_analysis.md:93
msgid "selfdestruct can block calling contracts unexpectedly. Be especially careful if this contract is planned to be used by other contracts (i.e. library contracts, interactions). Selfdestruction of the callee contract can leave callers in an inoperable state."
msgstr "selfdestruct 可以意外阻止调用合约。 如果该合约计划被其他合约(即 程序库合约、交互)使用，请特别小心。 被调用者合约的自毁可能会使调用者处于不可操作状态。"

#: ../../static_analysis.md:100
msgid "Category: Gas & Economy"
msgstr "类别：gas与经济"

#: ../../static_analysis.md:101
msgid "Gas costs: Too high gas requirement of functions"
msgstr "Gas costs：对 gas 功能要求很高"

#: ../../static_analysis.md:103
msgid "If the gas requirement of a function is higher than the block gas limit, it cannot be executed. Please avoid loops in your functions or actions that modify large areas of storage"
msgstr "如果一个函数的gas需求高于block gas limit，它就不能被执行。 请避免在修改大面积存储的函数或操作中出现循环"

#: ../../static_analysis.md:115
msgid "This on local calls: Invocation of local functions via 'this'"
msgstr "本地调用上的 this：通过 'this' 调用本地函数"

#: ../../static_analysis.md:117
msgid "Never use this to call functions in the same contract, it only consumes more gas than normal local calls."
msgstr "永远不要使用它来调用同一个合约中的函数，它只会比普通的本地调用消耗更多的gas。"

#: ../../static_analysis.md:132
msgid "Delete on dynamic Array: Use require/assert appropriately"
msgstr "删除动态数组：适当使用 require/assert"

#: ../../static_analysis.md:134
msgid "The delete operation when applied to a dynamically sized array in Solidity generates code to delete each of the elements contained. If the array is large, this operation can surpass the block gas limit and raise an OOG exception. Also nested dynamically sized objects can produce the same results."
msgstr "当应用于 Solidity 中动态大小的数组时，删除操作会生成代码以删除包含的每个元素。 如果数组很大，此操作可能会超过块gas限制并引发 OOG 异常。 嵌套的动态大小的对象也可以产生相同的结果。"

#: ../../static_analysis.md:146
msgid "For loop over dynamic array: Iterations depend on dynamic array's size"
msgstr "For 循环遍历动态数组：迭代取决于动态数组的大小"

#: ../../static_analysis.md:148
msgid "Loops that do not have a fixed number of iterations, for example, loops that depend on storage values, have to be used carefully: Due to the block gas limit, transactions can only consume a certain amount of gas. The number of iterations in a loop can grow beyond the block gas limit which can stall the complete contract at a certain point. Additionally, using unbounded loops can incur in a lot of avoidable gas costs. Carefully test how many items at maximum you can pass to such functions to make it successful."
msgstr "没有固定迭代次数的循环，例如依赖于存储值的循环，必须谨慎使用：由于区块gas限制，交易只能消耗一定量的gas。 循环中的迭代次数可能会超过区块gas限制，这可能会在某个点停止完整的合约。 此外，使用无界循环会产生大量可避免的 gas 成本。 仔细测试您最多可以将多少项传递给此类函数以使其成功。"

#: ../../static_analysis.md:164
msgid "Ether transfer in loop: Transferring Ether in a for/while/do-while loop"
msgstr "循环中的ETH转移：在 for/while/do-while 循环中转移ETH"

#: ../../static_analysis.md:166
msgid "Ether payout should not be done in a loop. Due to the block gas limit, transactions can only consume a certain amount of gas. The number of iterations in a loop can grow beyond the block gas limit which can cause the complete contract to be stalled at a certain point. If required, make sure that number of iterations are low and you trust each address involved."
msgstr "以太币支付不应循环进行。 由于区块gas限制，交易只能消耗一定量的gas。 循环中的迭代次数可能会超过区块gas限制，这可能导致整个合约在某个点停滞不前。 如果需要，请确保迭代次数较少并且您信任所涉及的每个地址。"

#: ../../static_analysis.md:189
msgid "Category: ERC"
msgstr "类别：ERC"

#: ../../static_analysis.md:190
msgid "ERC20: 'decimals' should be 'uint8'"
msgstr "ERC20：'decimals' 应该是 'uint8'"

#: ../../static_analysis.md:192
msgid "ERC20 Contracts decimals function should have uint8 as return type."
msgstr "ERC20 合约小数函数应该有 uint8 作为返回类型。"

#: ../../static_analysis.md:202
msgid "Category: Miscellaneous"
msgstr "类别：其它"

#: ../../static_analysis.md:203
msgid "Constant/View/Pure functions: Potentially constant/view/pure functions"
msgstr "Constant/View/Pure 函数：潜在的Constant/View/Pure 函数"

#: ../../static_analysis.md:205
msgid "It warns for the methods which potentially should be constant/view/pure but are not."
msgstr "它警告那些可能应该是 constant/view/pure 但不是的方法。"

#: ../../static_analysis.md:213
msgid "Similar variable names: Variable names are too similar"
msgstr "Similar variable names：变量名太相似"

#: ../../static_analysis.md:215
msgid "It warns on the usage of similar variable names."
msgstr "它警告使用类似的变量名。"

#: ../../static_analysis.md:225
msgid "No return: Function with 'returns' not returning"
msgstr "No return：带有“返回”的函数不返回"

#: ../../static_analysis.md:227
msgid "It warns for the methods which define a return type but never explicitly return a value."
msgstr "它警告定义返回类型但从不显式返回值的方法。"

#: ../../static_analysis.md:235
msgid "Guard conditions: Use 'require' and 'assert' appropriately"
msgstr "守卫条件：适当使用“require”和“assert”"

#: ../../static_analysis.md:237
msgid "Use assert(x) if you never ever want x to be false, not in any circumstance (apart from a bug in your code). Use require(x) if x can be false, due to e.g. invalid input or a failing external component."
msgstr "如果您永远不希望 x 为假，请使用 assert(x)，而不是在任何情况下(除了代码中的错误)。 如果 x 可能为假，请使用 require(x)，例如 无效输入或失败的外部组件。"

#: ../../static_analysis.md:243
msgid "Result not used: The result of an operation not used"
msgstr "Result not used：未使用操作的结果"

#: ../../static_analysis.md:245
msgid "A binary operation yields a value that is not used in the following. This is often caused by confusing assignment (=) and comparison (==)."
msgstr "二元运算产生的值在下文中未使用。 这通常是由混淆的assignment (=) 和 comparison (==) 引起的。"

#: ../../static_analysis.md:253
msgid "String Length: Bytes length != String length"
msgstr "String Length：字节长度！=字符串长度"

#: ../../static_analysis.md:255
msgid "Bytes and string length are not the same since strings are assumed to be UTF-8 encoded (according to the ABI defintion) therefore one character is not nessesarily encoded in one byte of data."
msgstr "字节和字符串长度不一样，因为假设字符串是 UTF-8 编码的(根据 ABI 定义)，因此一个字符不一定会编码在一字节数据中。"

#: ../../static_analysis.md:265
msgid "Delete from dynamic array: 'delete' on an array leaves a gap"
msgstr "从动态数组中删除：数组上的“删除”会留下空隙"

#: ../../static_analysis.md:267
msgid "Using delete on an array leaves a gap. The length of the array remains the same. If you want to remove the empty position you need to shift items manually and update the length property."
msgstr "在数组上使用 delete 会留下一个空白。 数组的长度保持不变。 如果要删除空位置，则需要手动移动项目并更新长度属性。"

#: ../../static_analysis.md:280
msgid "Data Truncated: Division on int/uint values truncates the result"
msgstr "数据被截断：int/uint 值的除法会截断结果"

#: ../../static_analysis.md:282
msgid "Division of integer values yields an integer value again. That means e.g. 10 / 100 = 0 instead of 0.1 since the result is an integer again. This does not hold for division of (only) literal values since those yield rational constants."
msgstr "整数值的除法再次产生整数值。 这意味着例如 10 / 100 = 0 而不是 0.1，因为结果又是一个整数。 这不适用于(仅)文字值的除法，因为它们产生有理常数。"

#: ../../static_analysis.md:292
msgid "Remix-analyzer"
msgstr "Remix-分析器"

#: ../../static_analysis.md:294
msgid "remix-analyzer is the library which works underneath of remix-ide Solidity Static Analysis plugin."
msgstr "remix-analyzer 是在 remix-ide Solidity 静态分析插件下工作的库。"

#: ../../static_analysis.md:296
msgid "remix-analyzer is an NPM package. It can be used as a library in a solution supporting node.js. Find more information about this type of usage in the remix-analyzer repository"
msgstr "remix-analyzer 是一个 NPM 包。 它可以用作支持 node.js 的解决方案中的库。 在 remix-analyzer 存储库中查找有关此类用法的更多信息"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../support.md:1
msgid "Support chat"
msgstr "支持聊天"

#: ../../support.md:4
msgid "We know that blockchain ecosystem is very new and that lots of information is scattered around the web. That is why we created a community support chat where we and other users try to answer your questions if you get stuck using Remix. Please, join the Remix channel and ask the community for help."
msgstr "我们知道区块链生态系统是非常新的，并且大量信息分散在网络上。 这就是为什么我们创建了一个社区支持聊天，如果您在使用 Remix 时遇到问题，我们和其他用户会尝试回答您的问题。 请加入 Remix 频道并向社区寻求帮助。"

#: ../../support.md:8
msgid "For anyone who is interested in developing a custom plugin for Remix or who wants to contribute to the codebase, we've opened another channel specially for developers working on Remix tool."
msgstr "对于有兴趣为 Remix 开发自定义插件或想要为代码库做出贡献的任何人，我们已经为使用 Remix 工具的开发人员专门开辟了另一个频道。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../terminal.md:1
msgid "Terminal"
msgstr "终端"

#: ../../terminal.md:6
msgid "Features, available in the terminal:"
msgstr "终端中可用的功能："

#: ../../terminal.md:8
msgid "It integrates a JavaScript interpreter and the web3 object. It enables the execution of the JavaScript script which interacts with the current context. (note that web3 is only available if the web provider or injected provider mode is selected)."
msgstr "它集成了 JavaScript 解释器和 web3 对象。 它可以执行与当前上下文交互的 JavaScript 脚本。(请注意，web3 仅在选择 web 提供程序或注入提供程序模式时可用)。"

#: ../../terminal.md:12
msgid "It displays important actions made while interacting with the Remix IDE (i.e. sending a new transaction)."
msgstr "它显示在与 Remix IDE 交互时所做的重要操作(即发送一个新的交易)。"

#: ../../terminal.md:14
msgid "It displays transactions that are mined in the current context. You can choose to display all transactions or only transactions that refers to the contracts Remix knows (e.g transaction created from the Remix IDE)."
msgstr "它显示在当前内容中挖掘的交易。 您可以选择显示所有交易或仅显示引用 Remix 知道的合约的交易(例如从 Remix IDE 创建的交易)。"

#: ../../terminal.md:18
msgid "It allows searching for the data and clearing the logs from the terminal."
msgstr "它允许从终端搜索数据并清除日志。"

#: ../../terminal.md:20
msgid "You can run scripts by inputting them at the bottom after the >."
msgstr "您可以通过在 > 之后的底部输入脚本来运行脚本。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../tutorial_debug.md:1
msgid "Debugging Transactions"
msgstr "调试交易"

#: ../../tutorial_debug.md:4
msgid "There are two ways to start debugging, each one corresponds to a different use case."
msgstr "有两种方式开始调试，每一种都对应不同的用例。"

#: ../../tutorial_debug.md:5
msgid "from the transaction log in the Terminal - use this when you want to debug a transaction."
msgstr "来自终端中的事务日志 - 当您想要调试事务时使用它。"

#: ../../tutorial_debug.md:6
msgid "from the Debugger - use this if you have a transaction hash."
msgstr "来自调试器 - 如果您有交易哈希，请使用它。"

#: ../../tutorial_debug.md:8
msgid "Initiate Debugging from the transaction log in the Terminal"
msgstr "从终端的事务日志中启动调试"

#: ../../tutorial_debug.md:9
msgid "Let's start with a basic contract ( or replace this one by your own ) :"
msgstr "让我们从一份基本合约开始(或者自己替换这个合约)："

#: ../../tutorial_debug.md:10
msgid "create a blank file in the file explorer (by clicking the + icon) and give it a name."
msgstr "在文件资源管理器中创建一个空白文件(通过单击 + 图标) 并为其命名。"

#: ../../tutorial_debug.md:11
msgid "copy the code below."
msgstr "复制下面的代码。"

#: ../../tutorial_debug.md:12
msgid "compile the code."
msgstr "编译代码。"

#: ../../tutorial_debug.md:13
msgid "click the Run & Deploy icon in the icon panel."
msgstr "单击图标面板中的运行和部署图标。"

#: ../../tutorial_debug.md:53
msgid "For the purpose of this tutorial, we will run the JavaScript VM. This simulates a custom blockchain. You could do the same using a proper backend node."
msgstr "出于本教程的目的，我们将运行 JavaScript VM。 这模拟了一个自定义区块链。 您可以使用适当的后端节点来做同样的事情。"

#: ../../tutorial_debug.md:56
msgid "Let's deploy the contract:"
msgstr "让我们部署合约："

#: ../../tutorial_debug.md:58
msgid "Click the Deploy button"
msgstr "单击部署按钮"

#: ../../tutorial_debug.md:62
msgid "You'll see the deployed instance (AKA the udapp)."
msgstr "您将看到已部署的实例(又名 udapp)。"

#: ../../tutorial_debug.md:66
msgid "Then open it up (by clicking the caret)."
msgstr "然后打开它(通过单击插入符号)。"

#: ../../tutorial_debug.md:71
msgid "We are going to call the Donate function and will send it ether."
msgstr "我们将调用 Donate 函数并将其发送它的ETH。"

#: ../../tutorial_debug.md:73
msgid "To do this: in the value input box put in 2 and select Ether as the unit (and not wei like I did in the image below - well you could - it won't really change anything)."
msgstr "要做到这一点：在值输入框中输入 2 并选择ETH作为单位(而不是像我在下图中所做的那样 - 你可以 - 它不会真正改变任何东西)。"

#: ../../tutorial_debug.md:77
msgid "Then click the Donate button."
msgstr "然后点击捐赠按钮。"

#: ../../tutorial_debug.md:79
msgid "This will send Ether to the this function."
msgstr "这会将ETH发送到 this 函数。"

#: ../../tutorial_debug.md:81
msgid "Because we are using the JavaScript VM, everything happens almost instantly.  (If we had been using Injected Web 3, then we would have to need to approve the transaction, pay for gas and wait for the transaction to get mined.)"
msgstr "因为我们使用的是 JavaScript VM，所以几乎所有事情都会立即发生。(如果我们一直在使用 Injected Web 3，那么我们将需要批准交易、支付 gas 并等待交易被开采。)"

#: ../../tutorial_debug.md:83
msgid "Remix displays information related to each transaction result in the terminal."
msgstr "Remix 在终端中显示与每个交易结果相关的信息。"

#: ../../tutorial_debug.md:85
msgid "Check in the terminal where the transaction you just made is logged."
msgstr "签入记录您刚刚进行的交易的终端。"

#: ../../tutorial_debug.md:87
msgid "Click the debug button to start debugging it."
msgstr "单击调试按钮开始调试它。"

#: ../../tutorial_debug.md:91
msgid "Before we get to the actual debugging tool, the next section show how to start debugging session directly from the Debugger."
msgstr "在我们使用实际的调试工具之前，下一节将展示如何直接从调试器启动调试会话。"

#: ../../tutorial_debug.md:93
msgid "Initiate Debugging from the Debugger"
msgstr "从调试器启动调试"

#: ../../tutorial_debug.md:95
msgid "Click the bug icon in the icon panel to get to the debugger in the side panel."
msgstr "单击图标面板中的错误图标以访问侧面板中的调试器。"

#: ../../tutorial_debug.md:97
msgid "If you don't see the bug icon, go to the plugin manager and activate the debugger."
msgstr "如果您没有看到错误图标，请转到插件管理器并激活调试器。"

#: ../../tutorial_debug.md:99
msgid "You can start a debug session by providing a transaction hash."
msgstr "您可以通过提供事务哈希来启动调试会话。"

#: ../../tutorial_debug.md:101
msgid "To find a transaction hash:"
msgstr "要查找交易哈希："

#: ../../tutorial_debug.md:102
msgid "Go to a transaction in the terminal."
msgstr "在终端中进行交易。"

#: ../../tutorial_debug.md:103
msgid "Click a line with a transaction - to exand the log."
msgstr "单击带有事务的行 - 展开日志。"

#: ../../tutorial_debug.md:104
msgid "The transaction hash is there - copy it."
msgstr "交易哈希在那里 - 复制它。"

#: ../../tutorial_debug.md:108
msgid "Then click in the debugger paste the hash and click on the Start debugging button."
msgstr "然后单击调试器粘贴哈希并单击开始调试按钮。"

#: ../../tutorial_debug.md:112
msgid "Using the debugger"
msgstr "使用调试器"

#: ../../tutorial_debug.md:117
msgid "The debugger allows one to see detailed informations about the transaction's execution. It uses the editor to display the location in the source code where the current execution is."
msgstr "调试器允许人们查看有关事务执行的详细信息。 它使用编辑器在源代码中显示当前执行的位置。"

#: ../../tutorial_debug.md:121
msgid "The navigation part contains a slider and buttons that can be used to step through the transaction execution."
msgstr "导航部分包含一个滑块和按钮，可用于逐步执行事务。"

#: ../../tutorial_debug.md:125
msgid "More explaination of what these buttons do."
msgstr "更多解释这些按钮的作用。"

#: ../../tutorial_debug.md:126
msgid "Step Into"
msgstr "进入"

#: ../../tutorial_debug.md:127
msgid "Step Over Into"
msgstr "跨步进入"

#: ../../tutorial_debug.md:130
msgid "11 panels give detailed information about the execution:"
msgstr "11 个面板提供了有关执行的详细信息："

#: ../../tutorial_debug.md:132
msgid "Instructions"
msgstr "指令"

#: ../../tutorial_debug.md:134
msgid "The Instructions panel displays the bytecode of the current executing contract- with the current step highlighted."
msgstr "指令面板显示当前执行合约的字节码——当前步骤突出显示。"

#: ../../tutorial_debug.md:137
msgid "Important note: When this panel is hidden, the slider will have a courser granularity and only stop at expression boundaries, even if they are compiled into multiple EVM instructions. When the panel is displayed, it will be possible to step over every instruction, even those that refers to the same expression."
msgstr "重要提示：当此面板被隐藏时，滑块将具有更粗的粒度并且仅在表达式边界处停止，即使它们被编译成多个 EVM 指令。 显示面板时，可以跳过每条指令，即使是那些引用相同表达式的指令。"

#: ../../tutorial_debug.md:143
msgid "Solidity Locals"
msgstr "Solidity Locals"

#: ../../tutorial_debug.md:145
msgid "The Solidity Locals panel displays local variables associated with the current context."
msgstr "Solidity Locals 面板显示与当前上下文相关的局部变量。"

#: ../../tutorial_debug.md:148
msgid "Solidity State"
msgstr "Solidity State"

#: ../../tutorial_debug.md:150
msgid "The Solidity State panel displays state variables of the current executing contract."
msgstr "Solidity State 面板显示当前执行合约的状态变量。"

#: ../../tutorial_debug.md:153
msgid "Low level panels"
msgstr "低级面板"

#: ../../tutorial_debug.md:155
msgid "These panels display low level informations about the execution:"
msgstr "这些面板显示有关执行的低级信息："

#: ../../tutorial_debug.md:157
msgid "Stack"
msgstr "堆栈"

#: ../../tutorial_debug.md:158
msgid "Storages Changes"
msgstr "存储更改"

#: ../../tutorial_debug.md:159
msgid "Memory"
msgstr "内存"

#: ../../tutorial_debug.md:160
msgid "Call Data"
msgstr "调用数据"

#: ../../tutorial_debug.md:161
msgid "Call Stack"
msgstr "调用堆栈"

#: ../../tutorial_debug.md:162
msgid "Return Value (only if the current step is a RETURN opcode)"
msgstr "Return Valu(仅当当前步骤是返回操作码时)"

#: ../../tutorial_debug.md:163
msgid "Full Storages Changes (only at the end of the execution - display every storage change of every modified contract)"
msgstr "完整存储更(仅在执行结束时 - 显示每个修改后的合约的每个存储更改)"

#: ../../tutorial_debug.md:166
msgid "Reverted Transaction"
msgstr "恢复交易"

#: ../../tutorial_debug.md:168
msgid "A transaction can be reverted (because of an out of gas exception or Solidity revert statement or because of a low level exception)."
msgstr "可以恢复交易(因为用尽gas异常或 Solidity 恢复语句或因为低级别异常)。"

#: ../../tutorial_debug.md:171
msgid "It is important to be aware of the exception and to locate where the exception is in the source code."
msgstr "了解异常并找出异常在源代码中的位置很重要。"

#: ../../tutorial_debug.md:174
msgid "Remix will warn you when the execution throws an exception. The warning button will jump to the last opcode before the exception happened."
msgstr "当执行引发异常时，Remix 会警告您。 警告按钮将跳转到异常发生之前的最后一个操作码。"

#: ../../tutorial_debug.md:178
msgid "Breakpoints"
msgstr "断点"

#: ../../tutorial_debug.md:180
msgid "The two last buttons from the navigation area are used to jump either back to the previous breakpoint or forward to the next breakpoint."
msgstr "导航区域的最后两个按钮用于跳回上一个断点或前进到下一个断点。"

#: ../../tutorial_debug.md:183
msgid "Breakpoints can be added and removed by clicking on the line number in the Editor."
msgstr "可以通过单击编辑器中的行号来添加和删除断点。"

#: ../../tutorial_debug.md:185
msgid "When using debug session with breakpoints, the execution will jump to the first encountered breakpoint."
msgstr "当使用带断点的调试会话时，执行将跳转到第一个遇到的断点。"

#: ../../tutorial_debug.md:188
msgid "Important note: If you add a breakpoint to a line that declares a variable, it might be triggered twice: Once for initializing the variable to zero and second time for assigning the actual value. As an example, assume you are debugging the following contract:"
msgstr "重要提示：如果在声明变量的行中添加断点，它可能会被触发两次：一次用于将变量初始化为零，第二次用于分配实际值。 例如，假设您正在调试以下合约："

#: ../../tutorial_debug.md:206
msgid "And let's says that breakpoints are set for the lines"
msgstr "假设为这些行设置了断点"

#: ../../tutorial_debug.md:208
msgid "uint p = 45;"
msgstr "uint p = 45;"

#: ../../tutorial_debug.md:210
msgid "m = 89;"
msgstr "m = 89;"

#: ../../tutorial_debug.md:212
msgid "uint l = 34;"
msgstr "uint l = 34;"

#: ../../tutorial_debug.md:214
msgid "then clicking on Jump to next breakpoint will stop at the following lines in the given order:"
msgstr "然后单击跳转到下一个断点将按给定顺序在以下行处停止："

#: ../../tutorial_debug.md:217
msgid "uint p = 45; (declaration of p)"
msgstr "uint p = 45;(p的声明)"

#: ../../tutorial_debug.md:219
msgid "uint l = 34; (declaration of l)"
msgstr "uint l = 34; (l 的声明)"

#: ../../tutorial_debug.md:221
msgid "uint p = 45; (45 assigned to p)"
msgstr "uint p = 45; (45 分配给 p)"

#: ../../tutorial_debug.md:223
msgid "m = 89; (89 assigned to m)"
msgstr "m = 89; (89 分配给 m)"

#: ../../tutorial_debug.md:225
msgid "uint l = 34; (34 assigned to l)"
msgstr "uint l = 34； (34 分配给 l)"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../udapp.md:1
msgid "Run & Deploy (part 2)"
msgstr "运行和部署(第 2 部分)"

#: ../../udapp.md:4
msgid "Deployed contracts"
msgstr "已部署的合约"

#: ../../udapp.md:6
msgid "This section in the Run tab contains a list of deployed contracts to interact with through autogenerated UI of the deployed contract (also called udapp)."
msgstr "运行选项卡中的此部分包含一个已部署合约列表，可通过已部署合约(也称为 udapp) 的自动生成 UI 进行交互。"

#: ../../udapp.md:8
msgid "The deployed contract appears but is in its collapsed form."
msgstr "部署的合约出现，但处于折叠形式。"

#: ../../udapp.md:12
msgid "Click the sideways caret to open it up."
msgstr "单击侧面的插入符号将其打开。"

#: ../../udapp.md:16
msgid "You will see the functions in the contract.  The functions buttons can have different color buttons."
msgstr "您将看到合约中的功能。 功能按钮可以有不同颜色的按钮。"

#: ../../udapp.md:18
msgid "Functions that are constant or pure functions in Solidity have a blue buttons. Clicking one of this type does not create a new transaction. So clicking will not cause state changes - it will only return a value stored in the contract - so it won't cost you anything in gas fees."
msgstr "Solidity 中的常量或纯函数有一个蓝色按钮。 单击此类型之一不会创建新事务。 所以点击不会导致状态改变——它只会返回一个存储在合约中的值——所以它不会花费你任何gas费。"

#: ../../udapp.md:20
msgid "Functions that change the state of the contract AND that do not accept Ether are called non-payable functions and have an orange button. Clicking on them will create a transaction and thus cost gas."
msgstr "更改合约状态且不接受ETH的函数称为非付费函数，并带有一个橙色按钮。 点击它们将创建一个交易，因此会产生 gas。"

#: ../../udapp.md:22
msgid "Functions that have red buttons are payable functions in Solidity. Clicking one of these will create a new transaction and this transaction can accept a value.  The value is put in in the Value field which is under the Gas Limit field."
msgstr "带有红色按钮的函数是 Solidity 中的应付函数。 单击其中一个将创建一个新事务，并且该事务可以接受一个值。 该值被输入到 Gas Limit 字段下的 Value 字段中。"

#: ../../udapp.md:27
msgid "See more information about Solidity modifiers in the Solidity docs. ."
msgstr "在 Solidity 文档中查看有关 Solidity 修饰符的更多信息。"

#: ../../udapp.md:31
msgid "If a function requires input parameters, well.. you gotta put them in."
msgstr "如果一个函数需要输入参数，那么...... 你必须把它们放进去。"

#: ../../udapp.md:33
msgid "Inputting parameters"
msgstr "输入参数"

#: ../../udapp.md:37
msgid "Inputting parameters in the collapsed view"
msgstr "在折叠视图中输入参数"

#: ../../udapp.md:39
msgid "(Inputting all the parameters in a single input box)"
msgstr "(在一个输入框中输入所有参数)"

#: ../../udapp.md:40
msgid "The input box tells you what type each parameter needs to be."
msgstr "输入框告诉您每个参数需要是什么类型。"

#: ../../udapp.md:41
msgid "Numbers and addresses do not need to be wrapped in double quotes."
msgstr "数字和地址不需要用双引号括起来。"

#: ../../udapp.md:42
msgid "Strings need to be wrapped."
msgstr "字符串需要被包装。"

#: ../../udapp.md:43
msgid "Parameters are separated by commas."
msgstr "参数用逗号分隔。"

#: ../../udapp.md:45
msgid "In the example above the \"delegate\" function has 3 parameters."
msgstr "在上面的例子中，“delegate”函数有 3 个参数。"

#: ../../udapp.md:47
msgid "Inputting parameters in the expanded view"
msgstr "在展开视图中输入参数"

#: ../../udapp.md:48
msgid "Clicking the 'down' caret brings you to the Multi-param Manager - where you can input the parameters one at a time. Much less confusing!"
msgstr "单击“向下”插入符号会将您带到多参数管理器 - 您可以一次输入一个参数。 少了很多混乱！"

#: ../../udapp.md:52
msgid "In the expanded view, strings do not need to be wrapped."
msgstr "在展开的视图中，不需要包装字符串。"

#: ../../udapp.md:54
msgid "Clicking the clipboard icon will encode the inputs and will copy them.  Only a valid set of inputs can be encoded."
msgstr "单击剪贴板图标将对输入进行编码并复制它们。 只有一组有效的输入可以被编码。"

#: ../../udapp.md:56
msgid "So if you made a mistake and put a uint8 where an address should have been, clicking the clipboard here will give you an error."
msgstr "因此，如果您犯了一个错误并将一个 uint8 放置在地址应该是的位置，单击此处的剪贴板将给您一个错误。"

#: ../../udapp.md:58
msgid "Low level interactions"
msgstr "低级交互"

#: ../../udapp.md:60
msgid "Low level interactions are used to send funds or calldata or funds & calldata to a contract through the receive() or fallback() function.  Typically, you should only need to implement the fallback function if you are following an upgrade or proxy pattern."
msgstr "低级交互用于通过 receive() 或 fallback() 函数将资金或 calldata 或资金和 calldata 发送到合约。 通常，如果您遵循升级或代理模式，您应该只需要实现回退功能。"

#: ../../udapp.md:62
msgid "The low level interactions section is below the functions in each deployed contract."
msgstr "低级交互部分位于每个已部署合约中的功能下方。"

#: ../../udapp.md:67
msgid "Please note the following:"
msgstr "请注意以下事项："

#: ../../udapp.md:69
msgid "If you are executing a plain Ether transfer to a contract, you need to have the receive() function in your contract.  If your contract has been deployed and you want to send it funds, you would input the amount of Ether or Wei etc. (see A in graphic below), and then input NOTHING in the calldata field of Low level interactions (see B in graphic) and click the Transact button (see C in graphic below)."
msgstr "如果你正在执行一个普通的ETH转账到一个合约，你需要在你的合约中有 receive() 函数。 如果你的合约已经部署，你想给它发送资金，你可以输入ETH或 Wei 等的数量(见下图中的 A)，然后在低级交互的 calldata 字段中输入 NOTHING(见下图中的 B) 并单击 Transact 按钮(参见下图中的 C)。"

#: ../../udapp.md:73
msgid "If you are sending calldata to your contract with Ether, then you need to use the fallback() function and have it with the state mutability of payable."
msgstr "如果您使用ETH将 calldata 发送到您的合约，那么您需要使用 fallback() 函数并使其具有应付状态的可变性。"

#: ../../udapp.md:75
msgid "If you are not sending ether to the contract but are sending call data then you need to use the fallback() function."
msgstr "如果你没有向合约发送ETH而是发送调用数据，那么你需要使用 fallback() 函数。"

#: ../../udapp.md:77
msgid "If you break the rules when using the Low level interactions you will be slapped with a warning."
msgstr "如果您在使用低级交互时违反规则，您将受到警告。"

#: ../../udapp.md:79
msgid "Please see the solidity docs for more specifics about using the fallback and receive functions."
msgstr "有关使用回退和接收功能的更多细节，请参阅solidity 文档。"

#: ../../udapp.md:81
msgid "Passing in a tuple or a struct to a function"
msgstr "将元组或结构传递给函数"

#: ../../udapp.md:82
msgid "To pass a tuple in, you need to put in an array []."
msgstr "要传入一个元组，您需要放入一个数组 []。"

#: ../../udapp.md:84
msgid "Similarly, to pass in a struct as a parameter of a function, it needs to be put in as an array [].  Also note that the line pragma experimental ABIEncoderV2; needs to put in at the top of the solidity file."
msgstr "类似地，要将结构体作为函数的参数传入，需要将其作为数组 [] 放入。 还要注意行 pragma 实验 ABIEncoderV2; 需要放在solidity文件的顶部。"

#: ../../udapp.md:88
msgid "Example of passing nested struct to a function"
msgstr "将嵌套结构传递给函数的示例"

#: ../../udapp.md:89
msgid "Consider a nested struct defined like this:"
msgstr "考虑这样定义的嵌套结构："

#: ../../udapp.md:101
msgid "If a function has the signature fertilizer(Garden memory gardenPlot) then the correct syntax is:"
msgstr "如果函数具有签名 fertilizer(Garden memory gardenPlot)，那么正确的语法是："

#: ../../udapp.md:106
msgid "To continue on this example, here's a sample contract:"
msgstr "为了继续这个例子，这里有一个示例合约："

#: ../../udapp.md:133
msgid "After compiling, deploying the contract and opening up the deployed instance, we can then add the following input parameters to the function named fertilizer :"
msgstr "在编译、部署合约并打开部署的实例后，我们可以将以下输入参数添加到名为 foil 的函数中："

#: ../../udapp.md:139
msgid "The function fertilizer accepts a single parameter of the type Garden. The type Garden is a struct. Structs are wrapped in square brackets.  Inside Garden is an array that is an array of structs named theFlowers. It gets a set of brackets for the array and another set for the struct. Thus the double square brackets."
msgstr "函数 fertilizer 接受花园类型的单个参数。 Garden 类型是一个结构体。 结构体用方括号括起来。 Garden 内部是一个数组，它是一个名为 theFlowers 的结构数组。 它为数组获取一组括号，为结构获取另一组括号。 因此，双方括号。"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../unittesting_examples.md:1
msgid "Testing by Example"
msgstr "示例测试"

#: ../../unittesting_examples.md:4
msgid "Here are some examples which can give you better understanding to plan your tests."
msgstr "以下是一些示例，可以让您更好地理解计划测试。"

#: ../../unittesting_examples.md:6
msgid "Note: Examples in this section are intended to give you a push for development. We don't recommend to rely on them without verifying at your end."
msgstr "注意：本节中的示例旨在推动您的开发。 我们不建议您在没有经过验证的情况下依赖它们。"

#: ../../unittesting_examples.md:8
msgid "1. Simple example"
msgstr "1. 简单的例子"

#: ../../unittesting_examples.md:9
msgid "In this example, we test setting & getting variables."
msgstr "在这个例子中，我们测试设置和获取变量。"

#: ../../unittesting_examples.md:11
msgid "Contract/Program to be tested: Simple_storage.sol"
msgstr "要测试的合约/程序：Simple_storage.sol"

#: ../../unittesting_examples.md:32
msgid "Test contract/program: simple_storage_test.sol"
msgstr "测试合约/程序：simple_storage_test.sol"

#: ../../unittesting_examples.md:60
msgid "2. Testing a method involving msg.sender"
msgstr "2.测试一个涉及msg.sender的方法"

#: ../../unittesting_examples.md:61
msgid "In Solidity, msg.sender plays a great role in access management of a smart contract methods interaction. Different msg.sender can help to test a contract involving multiple accounts with different roles. Here is an example for testing such case:"
msgstr "在 Solidity 中，msg.sender 在智能合约方法交互的访问管理中发挥着重要作用。 不同的 msg.sender 可以帮助测试涉及具有不同角色的多个账户的合约。 这是测试这种情况的示例："

#: ../../unittesting_examples.md:63
msgid "Contract/Program to be tested: Sender.sol"
msgstr "要测试的合约/程序：Sender.sol"

#: ../../unittesting_examples.md:85
msgid "Test contract/program: Sender_test.sol"
msgstr "测试合约/程序：Sender_test.sol"

#: ../../unittesting_examples.md:137
msgid "3. Testing method execution"
msgstr "3. 测试方法执行"

#: ../../unittesting_examples.md:139
msgid "With Solidity, one can directly verify the changes made by a method in storage by retrieving those variables from a contract. But testing for a successful method execution takes some strategy. Well that is not entirely true, when a test is successful - it is usually obvious why it passed. However, when a test fails, it is essential to understand why it failed."
msgstr "使用 Solidity，人们可以通过从合约中检索这些变量来直接验证存储中的方法所做的更改。 但是测试一个成功的方法执行需要一些策略。 好吧，这并不完全正确，当测试成功时-通常很明显为什么它通过了。 但是，当测试失败时，必须了解它失败的原因。"

#: ../../unittesting_examples.md:141
msgid "To help in such cases, Solidity introduced the try-catch statement in version 0.6.0. Previously, we had to use low-level calls to track down what was going on."
msgstr "为了在这种情况下提供帮助，Solidity 在 0.6.0 版本中引入了 try-catch 语句。 以前，我们必须使用低级调用来追踪正在发生的事情。"

#: ../../unittesting_examples.md:143
msgid "Here is an example test file that use both try-catch blocks and low level calls:"
msgstr "这是一个使用 try-catch 块和低级调用的示例测试文件："

#: ../../unittesting_examples.md:145
msgid "Contract/Program to be tested: AttendanceRegister.sol"
msgstr "要测试的合约/程序：AttendanceRegister.sol"

#: ../../unittesting_examples.md:174
msgid "Test contract/program: AttendanceRegister_test.sol"
msgstr "测试合约/程序： AttendanceRegister_test.sol"

#: ../../unittesting_examples.md:262
msgid "4. Testing a method involving msg.value"
msgstr "4.测试一个涉及msg.value的方法"

#: ../../unittesting_examples.md:263
msgid "In Solidity, ether can be passed along with a method call which is accessed inside contract as msg.value. Sometimes, multiple calculations in a method are performed based on msg.value which can be tested with various values using Remix's Custom transaction context. See the example:"
msgstr "在 Solidity 中，Eth可以与方法调用一起传递，该方法调用在合约内部作为 msg.value 访问。 有时，一个方法中的多个计算是基于 msg.value 执行的，可以使用 Remix 的自定义事务上下文使用各种值进行测试。 请参阅示例："

#: ../../unittesting_examples.md:265
msgid "Contract/Program to be tested: Value.sol"
msgstr "要测试的合约/程序：Value.sol"

#: ../../unittesting_examples.md:285
msgid "Test contract/program: Value_test.sol"
msgstr "测试合约/程序：Value_test.sol"

msgid ""
msgstr ""
"Project-Id-Version: Remix, Ethereum-IDE 1\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2020-10-21 10:25+0200\nPO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\nLast-Translator: FULL NAME <EMAIL@ADDRESS>\nLanguage-Team: LANGUAGE <LL@li.org>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n"

#: ../../unittesting.md:1
msgid "Unit Testing Plugin"
msgstr "单元测试插件"

#: ../../unittesting.md:4
msgid "Click the double check icon to get to the Solidity Unit Testing plugin."
msgstr "单击双重检查图标以访问 Solidity 单元测试插件。"

#: ../../unittesting.md:8
msgid "If you haven't used this plugin before and are not seeing double check icon, you have to activate it from Remix plugin manager."
msgstr "如果您之前没有使用过这个插件并且没有看到双重检查图标，您必须从 Remix 插件管理器中激活它。"

#: ../../unittesting.md:10
msgid "Go to the plugin manager (by click the plug icon) and load up the unit testing plugin."
msgstr "转到插件管理器(通过单击插件图标) 并加载单元测试插件。"

#: ../../unittesting.md:14
msgid "Now double check icon will appear on the left side icon bar. Clicking on icon will load the unit testing module in the side panel."
msgstr "现在仔细检查图标将出现在左侧图标栏上。 单击图标将在侧面板中加载单元测试模块。"

#: ../../unittesting.md:16
msgid "Alternatively, just select Solidity environment from remix IDE home page. This will activate Solidity Unit Testing plugin along with Solidity Compiler, Deploy & Run Transactions & Solidity Static Analysis plugins."
msgstr "或者，只需从 remix IDE 主页中选择 Solidity 环境。 这将激活 Solidity 单元测试插件以及 Solidity 编译器、部署和运行事务以及 Solidity 静态分析插件。"

#: ../../unittesting.md:20
msgid "Generate"
msgstr "生成"

#: ../../unittesting.md:22
msgid "Select a solidity file which you want to test and click on the button Generate. It will generate a new sample solidity test file in the current folder suffixed with _test. This file contains the minimum you need for running unit testing."
msgstr "选择您要测试的solidity 文件，然后单击按钮Generate。 它将在当前文件夹中生成一个新的样本可靠性测试文件，后缀为_test。 此文件包含运行单元测试所需的最低要求。"

#: ../../unittesting.md:24
msgid "Write Tests"
msgstr "编写测试"

#: ../../unittesting.md:26
msgid "Write tests to check the functionality of your contract. Remix injects a built-in assert library which can be used for testing. Visit the library documentation here."
msgstr "编写测试来检查合约的功能。 Remix 注入了一个可用于测试的内置断言库。 在此处访问库文档。"

#: ../../unittesting.md:28
msgid "Apart from this, Remix allows usage of some special functions to make testing more structural. They are:"
msgstr "除此之外，Remix 允许使用一些特殊功能来使测试更加结构化。 他们是："

#: ../../unittesting.md:30
msgid "beforeEach() - Runs before each test"
msgstr "beforeEach() - 在每次测试之前运行"

#: ../../unittesting.md:31
msgid "beforeAll() - Runs before all tests"
msgstr "beforeAll() - 在所有测试之前运行"

#: ../../unittesting.md:32
msgid "afterEach() - Runs after each test"
msgstr "afterEach() - 每次测试后运行"

#: ../../unittesting.md:33
msgid "afterAll() - Runs after all tests"
msgstr "afterAll() - 在所有测试之后运行"

#: ../../unittesting.md:35
msgid "To get started, see this simple example."
msgstr "要开始，请参阅这个简单的示例。"

#: ../../unittesting.md:37
msgid "Run"
msgstr "运行"

#: ../../unittesting.md:39
msgid "Once you are done with writing tests, select the _test.sol files in the list and click on the button Run to execute the tests in the selected files. The execution will run in a separate environment and the result will be displayed below."
msgstr "完成编写测试后，在列表中选择 _test.sol 文件，然后单击按钮运行以在所选文件中执行测试。 执行将在单独的环境中运行，结果将显示在下方。"

#: ../../unittesting.md:43
msgid "Stop"
msgstr "停止"

#: ../../unittesting.md:45
msgid "If you have selected multiple files to run the tests and want to stop the execution, click on Stop button. It will stop execution after running the tests for current file."
msgstr "如果您选择了多个文件来运行测试并想要停止执行，请单击停止按钮。 运行当前文件的测试后，它将停止执行。"

#: ../../unittesting.md:47
msgid "Customization"
msgstr "自定义"

#: ../../unittesting.md:49
msgid "Remix facilitates users with various types of customizations to test a contract properly."
msgstr "Remix 帮助用户通过各种类型的自定义来正确测试合约。"

#: ../../unittesting.md:51
msgid "1. Custom Compiler Context"
msgstr "1. 自定义编译器上下文"

#: ../../unittesting.md:53
msgid "Solidity Unit Testing refers Solidity Compiler plugin for compiler configurations. One can provide customized inputs for Compiler, EVM Version & Enable Optimization and these will be the configuration settings used for contract compilation before running unit tests."
msgstr "Solidity 单元测试是指用于编译器配置的 Solidity Compiler 插件。 可以为编译器、EVM 版本和启用优化提供自定义输入，这些将是在运行单元测试之前用于合约编译的配置设置。"

#: ../../unittesting.md:57
msgid "2. Custom Transaction Context"
msgstr "2. 自定义交易上下文"

#: ../../unittesting.md:59
msgid "For a contract method interaction, prime parameters of transaction are from address, value & gas. Usually, we need to test a method's behaviour under different values of these parameters."
msgstr "对于合约方法交互，交易的主要参数来自地址、价值和gas。 通常，我们需要测试一个方法在这些参数的不同值下的行为。"

#: ../../unittesting.md:61
msgid "Remix provides the functionality of custom msg.sender & msg.value of transaction using method devdoc like:"
msgstr "Remix 使用方法 devdoc 提供了自定义 msg.sender 和 msg.value 的功能，例如："

#: ../../unittesting.md:71
msgid "Things to keep in mind while using custom transaction context:"
msgstr "使用自定义事务上下文时要记住的事项："

#: ../../unittesting.md:73
msgid "Parameters must be defined in devdoc of related method"
msgstr "参数必须在相关方法的devdoc中定义"

#: ../../unittesting.md:74
msgid "Each parameter key should be prefixed with a hash (#) and end with a colon following a space (: ) like #sender:  & #value:"
msgstr "每个参数键都应以哈希 (#) 为前缀，并以冒号结尾，后跟一个空格 (: ) ，例如 #sender:  & #value:"

#: ../../unittesting.md:75
msgid "For now, customization is available for parameters sender & value only"
msgstr "目前，自定义仅适用于参数 sender 和 value"

#: ../../unittesting.md:76
msgid "Sender is from address of a transaction which is accessed using msg.sender inside a contract method. It should be defined in a fixed format as 'account-<account_index>'"
msgstr "发件人来自使用合约方法中的 msg.sender 访问的交易地址。 它应该以固定格式定义为 'account-<account_index>'"

#: ../../unittesting.md:77
msgid "<account_index> varies from 0-2 before remix-ide release v0.10.0 and 0-9 afterwards"
msgstr "<account_index> 在 remix-ide v0.10.0 发布之前从 0-2 变化，之后从 0-9 变化"

#: ../../unittesting.md:78
msgid "remix_accounts.sol must be imported in your test file to use custom sender"
msgstr "必须在您的测试文件中导入 remix_accounts.sol 才能使用自定义发件人"

#: ../../unittesting.md:79
msgid "Value is value sent along with a transaction in wei which is accessed using msg.value inside a contract method. It should be a number."
msgstr "价值是与 wei 中的交易一起发送的价值，可以使用合约方法中的 msg.value 访问。 它应该是一个数字。"

#: ../../unittesting.md:81
msgid "Regarding gas, Remix estimates the required gas for each transaction internally. Still if a contract deployment fails with Out-of-Gas error, it tries to redeploy it by doubling the gas. Deployment failing with double gas will show error: contract deployment failed after trying twice: The contract code couldn't be stored, please check your gas limit"
msgstr "关于 gas，Remix 在内部估计每笔交易所需的 gas。 尽管如此，如果合约部署因 Out-of-Gas 错误而失败，它会尝试通过将 gas 加倍来重新部署它。 双重gas部署失败将显示错误：尝试两次后合约部署失败：无法存储合约代码，请检查您的gas限制"

#: ../../unittesting.md:83
msgid "Various test examples can be seen in examples section."
msgstr "在示例部分可以看到各种测试示例。"

#: ../../unittesting.md:86
msgid "Points to remember"
msgstr "要记住的要点"

#: ../../unittesting.md:89
msgid "A test contract cannot have a method with parameters. Having one such method will show error: Method 'methodname' can not have parameters inside a test contract"
msgstr "测试合约不能有带参数的方法。 拥有一种这样的方法将显示错误：方法'methodname'在测试合约中不能有参数"

#: ../../unittesting.md:90
msgid "Number of test accounts are 3 before remix-ide release v0.10.0 and 10 afterwards"
msgstr "在 remix-ide v0.10.0 发布之前，测试账户数量为 3，之后为 10"

#: ../../unittesting.md:91
msgid "A test file which imports remix_accounts.sol might not compile successfully with Solidity Compiler plugin but it will work fine with Solidity Unit Testing plugin."
msgstr "导入 remix_accounts.sol 的测试文件可能无法使用 Solidity Compiler 插件成功编译，但它可以与 Solidity Unit Testing 插件一起正常工作。"

#: ../../unittesting.md:93
msgid "Remix-tests"
msgstr "Remix-tests"

#: ../../unittesting.md:96
msgid "remix-tests is the module which works underneath of remix-ide Solidity Unit Testing plugin."
msgstr "remix-tests 是在 remix-ide Solidity 单元测试插件下工作的模块。"

#: ../../unittesting.md:98
msgid "remix-tests is an NPM package. It can also be used as  a CLI/CI solution, supporting node.js. Find more information about this type of usage in the remix-tests repository"
msgstr "remix-tests 是一个 NPM 包。 它也可以用作 CLI/CI 解决方案，支持 node.js。 在 remix-tests 存储库中查找有关此类用法的更多信息"

#: ../../unittesting.md:100
msgid "For CI implementation example, see Su Squares contract and Travis build that uses remix-tests for continuous integration testing."
msgstr "对于 CI 实现示例，请参阅使用 remix-tests 进行持续集成测试的 Su Squares 合约和 Travis 构建。"

